{"version":3,"sources":["config.ts","store/index.ts","components/Home.tsx","store/chapter.ts","components/ChapterSelector.tsx","components/Chapter.tsx","components/HideOnScroll.tsx","components/Book.tsx","components/Login.tsx","components/SignUP.tsx","components/Center.tsx","App.tsx","reportWebVitals.ts","index.tsx","store/store.ts"],"names":["config","apiHost","phoneRegExp","passwordRegExp","nickRegExp","StoreContext","createContext","StoreProvider","Provider","useAddChapterDialogStyles","makeStyles","theme","createStyles","appBar","position","title","marginLeft","spacing","flex","container","padding","progress","top","left","width","zIndex","Transition","React","forwardRef","props","ref","Slide","direction","AddChapterDialog","open","handleClose","onSubmit","titleLabel","dialogTitle","contentPlaceHolder","classes","useState","name","setName","isNameError","setIsNameError","nameErrorMsg","setNameErrorMsg","content","setContent","isContentError","setIsContentError","contentErrorMsg","setContentErrorMsg","pending","setPending","useEffect","Dialog","fullScreen","onClose","TransitionComponent","AppBar","className","color","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","Button","autoFocus","then","data","Grid","item","xs","TextField","value","error","helperText","onChange","e","target","label","fullWidth","multiline","placeholder","in","LinearProgress","useStyles","flexGrow","fab","bottom","right","loginTips","textAlign","marginTop","marginBottom","palette","grey","Home","bookList","setBookList","history","useHistory","store","useContext","openAddDialog","setOpenAddDialog","fetch","method","json","books","Box","isIsLoginReady","isLogin","Fade","push","userInfo","nick","Skeleton","animation","List","map","book","ListItem","button","id","ListItemText","primary","secondary","author","length","Link","component","RouterLink","to","Fab","mode","credentials","headers","body","JSON","stringify","errCode","console","log","uuidv4","Chapter","source","sub","subMap","initialized","this","initialize","makeObservable","observable","addSub","action","addSubMap","chapter","backgroundColor","addChapterBox","ChapterSelector","onSelect","selectId","header","subheader","ListSubheader","disableSticky","ListItemIcon","Radio","checked","useAddChapterStyles","AddChapter","useChapterBoxStyles","alignItems","flexDirection","fontWeight","fontSize","textIndent","lineHeight","selectorContainer","paddingLeft","ChapterBox","parent","setParentId","selectedSubChapterId","setSelectedSubChapterId","selectedSubChapter","setSelectedSubChapter","showSelector","setShowSelector","handleChange","handleCreateChapterSubmit","parentId","res","chapterSource","ButtonBase","HideOnScroll","children","trigger","useScrollTrigger","appear","menuButton","marginRight","BookBox","useParams","setBook","goBack","Container","SimpleAppBar","elevation","margin","maxWidth","submitBtnContainer","submitBtn","buttonProgress","signInBox","display","justifyContent","Login","phone","setPhone","isPhoneError","setIsPhoneError","phoneErrorMsg","setPhoneErrorMsg","password","setPassword","isPasswordError","setIsPasswordError","passwordErrorMsg","setPasswordErrorMsg","isPending","setIsPending","type","disabled","test","setIsLogin","setUserInfo","info","errMsg","CircularProgress","size","SignUp","setNick","isNickError","setIsNickError","nickErrorMsg","setNickErrorMsg","passwordSec","setPasswordSec","isPasswordSecError","setIsPasswordSecError","passwordSecErrorMsg","setPasswordSecErrorMsg","Center","logout","replace","autorun","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","bool","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"kZAEaA,EAAS,CAClBC,QAAkB,GAClBC,YAAa,yBACbC,eAAgB,oEAChBC,WAAY,cCHHC,EAAeC,wBAAqB,IACpCC,EAAgBF,EAAaG,S,kCCQpCC,EAA4BC,aAAW,SAACC,GAAD,OACzCC,YAAa,CACTC,OAAQ,CACNC,SAAU,YAEZC,MAAO,CACLC,WAAYL,EAAMM,QAAQ,GAC1BC,KAAM,GAERC,UAAW,CACPC,QAAST,EAAMM,QAAQ,IAE3BI,SAAU,CACNP,SAAU,QACVQ,IAAK,EACLC,KAAM,EACNC,MAAO,QACPC,OAAQ,UAKdC,EAAaC,IAAMC,YAAW,SAClCC,EACAC,GAEA,OAAO,cAACC,EAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGhCI,EAAmB,SAAC,GAY1B,IAXHC,EAWE,EAXFA,KAAMC,EAWJ,EAXIA,YAAaC,EAWjB,EAXiBA,SAAUC,EAW3B,EAX2BA,WAAYC,EAWvC,EAXuCA,YAAaC,EAWpD,EAXoDA,mBAYhDC,EAAU/B,IADd,EAEsBgC,mBAAS,IAF/B,mBAEKC,EAFL,KAEWC,EAFX,OAGoCF,oBAAS,GAH7C,mBAGKG,EAHL,KAGkBC,EAHlB,OAIsCJ,mBAAS,IAJ/C,mBAIKK,EAJL,KAImBC,EAJnB,OAK4BN,mBAAS,IALrC,mBAKKO,EALL,KAKcC,EALd,OAM0CR,oBAAS,GANnD,mBAMKS,EANL,KAMqBC,EANrB,OAO4CV,mBAAS,IAPrD,mBAOKW,EAPL,KAOsBC,EAPtB,OAQ4BZ,oBAAS,GARrC,mBAQKa,EARL,KAQcC,EARd,KAwCF,OA9BAC,qBAAU,WACNX,GAAe,GACfE,EAAgB,MACjB,CAACL,IAEJc,qBAAU,WACNL,GAAkB,GAClBE,EAAmB,MACpB,CAACL,IAsBG,eAACS,EAAA,EAAD,CAAQC,YAAU,EAACxB,KAAMA,EAAMyB,QAASxB,EAAayB,oBAAqBlC,EAA1E,UACH,cAACmC,EAAA,EAAD,CAAQC,UAAWtB,EAAQ3B,OAAQkD,MAAM,UAAzC,SACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQH,MAAM,UAAUI,QAAShC,EAAaiC,aAAW,QAA1E,SACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAWtB,EAAQzB,MAA5C,SACKuB,IAEL,cAACiC,EAAA,EAAD,CAAQC,WAAS,EAACT,MAAM,UAAUI,QA7B1C,WACI,OAAKzB,EAKAM,GAMLO,GAAW,QACXnB,EAAS,CAAEY,UAASjC,MAAO2B,IACtB+B,MAAK,SAAAC,GACFnB,GAAW,GACXpB,SATJgB,GAAkB,QAClBE,EAAmB,0CANnBR,GAAe,QACfE,EAAgB,GAAD,OAAIV,EAAJ,+BA0Bf,+BAKJ,eAACsC,EAAA,EAAD,CAAMxD,WAAS,EAACF,QAAS,EAAG6C,UAAWtB,EAAQrB,UAA/C,UACI,cAACwD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CACIN,WAAS,EACTO,MAAOrC,EACPsC,MAAOpC,EACPqC,WAAYnC,EACZoC,SAAU,SAAAC,GAAC,OAAIxC,EAAQwC,EAAEC,OAAOL,QAChCM,MAAOhD,EACPiD,WAAS,MAGjB,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CACIO,MAAM,eACNN,MAAO/B,EACPgC,MAAO9B,EACP+B,WAAY7B,EACZ8B,SAAU,SAAAC,GAAC,OAAIlC,EAAWkC,EAAEC,OAAOL,QACnCO,WAAS,EACTC,WAAS,EACTC,YAAajD,SAIzB,cAACR,EAAA,EAAD,CAAO0D,GAAInC,EAAStB,UAAU,OAA9B,SACI,cAAC0D,EAAA,EAAD,CAAgB5B,UAAWtB,EAAQnB,iBAKzCsE,EAAYjF,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXG,MAAO,CACL6E,SAAU,GAEZC,IAAK,CACD/E,SAAU,WACVgF,OAAQnF,EAAMM,QAAQ,GACtB8E,MAAOpF,EAAMM,QAAQ,IAEzB+E,UAAW,CACPC,UAAW,SACXC,UAAWvF,EAAMM,QAAQ,IACzBkF,aAAcxF,EAAMM,QAAQ,IAC5B8C,MAAOpD,EAAMyF,QAAQC,KAAK,WAKrBC,EAAO,WAChB,IAAM9D,EAAUmD,IADM,EAEUlD,mBAM3B,IARiB,mBAEf8D,EAFe,KAELC,EAFK,KAShBC,EAAUC,cACVC,EAAQC,qBAAWvG,GAVH,EAYoBoC,oBAAS,GAZ7B,mBAYfoE,EAZe,KAYAC,EAZA,KAgEtB,OAlDAtD,qBAAU,WAENuD,MAAM,GAAD,OAAI/G,EAAOC,QAAX,aAA+B,CAAE+G,OAAQ,QACzCvC,MAAK,SAAAC,GAAI,OAAIA,EAAKuC,UAClBxC,MAAK,SAAAC,GACF8B,EAAY9B,EAAKwC,YAE1B,IA2CI,eAACC,EAAA,EAAD,WACH,cAACtD,EAAA,EAAD,CAAQ/C,SAAS,SAASiD,MAAM,UAAhC,SACI,eAACC,EAAA,EAAD,CAASM,QAAQ,QAAjB,UACI,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAWtB,EAAQzB,MAA5C,mBAGA,cAAC,IAAD,UACK,kBAAM,mCACF4F,EAAMS,eAAiB,mCACnBT,EAAMU,QACH,cAACC,EAAA,EAAD,CAAM7B,GAAIkB,EAAMU,QAAhB,SACI,cAAC9C,EAAA,EAAD,CAAQR,MAAM,UAAUI,QAAS,kBAAMsC,EAAQc,KAAK,YAApD,SAAiEZ,EAAMa,SAASC,SAEpF,cAACH,EAAA,EAAD,CAAM7B,IAAKkB,EAAMU,QAAjB,SACI,cAAC9C,EAAA,EAAD,CAAQR,MAAM,UAAUI,QAAS,kBAAMsC,EAAQc,KAAK,WAApD,uBAEN,cAACG,EAAA,EAAD,CAAUC,UAAU,OAAOnG,MAAO,eAKxD,cAACoG,EAAA,EAAD,UACKrB,EAASsB,KAAI,SAACC,GAAD,OACV,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAe7D,QAAS,kBAhE3B8D,EAgEiDH,EAAKG,QA/D3ExB,EAAQc,KAAR,gBAAsBU,IAD1B,IAAyBA,GAgEb,UACI,cAACC,EAAA,EAAD,CAAcC,QAASL,EAAK/G,MAAOqH,UAAWN,EAAK9E,UACnD,cAACmE,EAAA,EAAD,UAAMW,EAAKO,WAFOP,EAAKG,SAKnC,cAAC,IAAD,UACK,kBAAM,sCACDtB,EAAMU,SAAWd,EAAS+B,OAAS,GAAK,cAACnB,EAAA,EAAD,CAAKrD,UAAWtB,EAAQwD,UAAxB,SACtC,eAAC3B,EAAA,EAAD,CAAYC,QAAQ,UAApB,yBACM,cAACiE,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,SAAhC,0BADN,8DAIH/B,EAAMU,SAAW,cAACsB,EAAA,EAAD,CAAK7E,UAAWtB,EAAQqD,IAAK9B,MAAM,UAAUI,QAAS,kBAAM2C,GAAiB,IAA7E,SACd,cAAC,IAAD,YAIZ,cAAC,EAAD,CACI5E,KAAM2E,EACNvE,YAAY,2BACZC,mBAAmB,mDACnBF,WAAW,eACXF,YAAa,kBAAM2E,GAAiB,IACpC1E,SAnFR,YAEI,IAF8BY,EAE/B,EAF+BA,QAASjC,EAExC,EAFwCA,MAGvC,OAAOgG,MAAM,GAAD,OAAI/G,EAAOC,QAAX,aAA+B,CACvC+G,OAAQ,OACR4B,KAAM,OACNC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBlI,QACAiC,cAGPyB,MAAK,SAAAC,GAAI,OAAIA,EAAKuC,UAClBxC,MAAK,SAAAC,GAWV,IAA0BoD,EATG,MAAjBpD,EAAKwE,SASSpB,EAJDpD,EAAKoD,KAW1BtB,EAAY,GAAD,mBAAKD,GAAL,CAAeuB,MAflBrB,EAAQc,KAAK,oB,iDCzM7B4B,QAAQC,IAAIC,gBACL,IAAMC,EAAb,WAeI,WAAYC,GAAe,yBAdpBxI,MAAgB,GAcG,KAbnBsH,OAAiB,GAaE,KAZnBrF,QAAkB,GAYC,KAXnBwG,IAID,GAOoB,KANnBC,OAAqC,GAMlB,KALnBxB,GAAa,GAKM,KAHnByB,aAAc,EAKbH,GACAI,KAAKC,WAAWL,GAGpBM,YAAeF,KAAM,CACjBD,YAAaI,IACb7B,GAAI6B,IACJ/I,MAAO+I,IACPzB,OAAQyB,IACR9G,QAAS8G,IACTN,IAAKM,IACLL,OAAQK,IACRC,OAAQC,IACRC,UAAWD,IACXJ,WAAYI,MA/BxB,uDAmCeT,GACPI,KAAK1B,GAAKsB,EAAOtB,IAAMoB,eACvBM,KAAK5I,MAAQwI,EAAOxI,MACpB4I,KAAKtB,OAASkB,EAAOlB,OACrBsB,KAAK3G,QAAUuG,EAAOvG,QACtB2G,KAAKH,IAAOD,EAAOC,KAAO,GAE1BG,KAAKD,aAAc,IA1C3B,6BA6CWH,GAMHI,KAAKH,IAAIjC,KAAK,CACVU,GAAIsB,EAAOtB,GACXlH,MAAOwI,EAAOxI,MACdsH,OAAQkB,EAAOlB,SAEnBsB,KAAKM,UAAU,IAAIX,EAAQC,MAxDnC,gCA2DcW,GACNP,KAAKF,OAAOS,EAAQjC,IAAMiC,MA5DlC,K,6BCGMvE,GAAYjF,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTO,UAAW,CACP+E,UAAWvF,EAAMM,QAAQ,GACzBkJ,gBAAiBxJ,EAAMyF,QAAQC,KAAK,MAExC+D,cAAe,CACXhJ,QAAST,EAAMM,QAAQ,SAKtBoJ,GAAkB,SAAC,GASzB,IAT2B3F,EAS5B,EAT4BA,KAAM4F,EASlC,EATkCA,SAAUC,EAS5C,EAT4CA,SAAUnI,EAStD,EATsDA,SAAUoI,EAShE,EATgEA,OAU5DhI,EAAUmD,KAEhB,OAAO,eAACwB,EAAA,EAAD,CAAKrD,UAAWtB,EAAQrB,UAAxB,UACkB,IAApBuD,EAAK8E,IAAIlB,QAAgB,cAAC,IAAD,UACrB,kBAAM,cAACV,EAAA,EAAD,CACH6C,UACI,cAACC,EAAA,EAAD,CAAeC,eAAe,EAA9B,SACKH,IAHN,SAOF9F,EAAK8E,IAAI3B,KAAI,SAAAjD,GAAI,OAAI,eAACmD,EAAA,EAAD,CAAUC,QAAM,EAAe7D,QAAS,kBAAMmG,EAAS1F,EAAKqD,KAA5D,UAClB,cAAC2C,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAOC,QAASlG,EAAKqD,KAAOsC,MAEhC,cAACrC,EAAA,EAAD,CAAcC,QAASvD,EAAK7D,UAJY6D,EAAKqD,YAQzD,cAACd,EAAA,EAAD,CAAKrD,UAAWtB,EAAQ4H,cAAxB,SACI,cAAC,GAAD,CAAYhI,SAAUA,UCtC5B2I,GAAsBrK,aAAW,SAACC,GAAD,OACrCC,YAAa,CACXoF,UAAW,CACPE,UAAWvF,EAAMM,QAAQ,GACzBkF,aAAcxF,EAAMM,QAAQ,GAC5B8C,MAAOpD,EAAMyF,QAAQC,KAAK,WAKrB2E,GAAa,SAAC,GAKpB,IALsB5I,EAKvB,EALuBA,SAKvB,EACwCK,oBAAS,GADjD,mBACKoE,EADL,KACoBC,EADpB,KAEIH,EAAQC,qBAAWvG,GACnBmC,EAAUuI,KAEhB,OAAO,cAAC,IAAD,UACF,kBAAM,mCACFpE,EAAMU,QAAU,qCACb,cAAC9C,EAAA,EAAD,CAAQJ,QAAS,kBAAM2C,GAAiB,IAAOxB,WAAS,EAAChB,QAAQ,WAAjE,sCACA,cAAC,EAAD,CACIjC,WAAW,eACXC,YAAY,2BACZC,mBAAmB,8BACnBL,KAAM2E,EACN1E,YAAa,kBAAM2E,GAAiB,IACpC1E,SAAUA,OAElB,cAAC+E,EAAA,EAAD,CAAKrD,UAAWtB,EAAQwD,UAAxB,SACI,eAAC3B,EAAA,EAAD,CAAYC,QAAQ,UAApB,yBACM,cAACiE,EAAA,EAAD,CAAMG,GAAG,SAASF,UAAWC,IAA7B,0BADN,sFAQVwC,GAAsBvK,aAAW,SAACC,GAAD,OACnCC,YAAa,CACTG,MAAO,CACHmF,UAAWvF,EAAMM,QAAQ,GACzBO,MAAO,OACP0J,WAAY,aACZC,cAAe,UAEnB9C,OAAQ,CACJ+C,WAAY,IACZrH,MAAOpD,EAAMyF,QAAQC,KAAK,KAC1BgF,SAAU1K,EAAMM,QAAQ,GACxBgF,UAAW,QACXzE,MAAO,OACP0E,UAAWvF,EAAMM,QAAQ,IAE7B+B,QAAS,CACLkD,UAAWvF,EAAMM,QAAQ,GACzBqK,WAAY3K,EAAMM,QAAQ,GAC1BsK,WAAY5K,EAAMM,QAAQ,MAE9BuK,kBAAmB,CACfC,YAAa9K,EAAMM,QAAQ,GAC3BiF,UAAWvF,EAAMM,QAAQ,GACzBkF,aAAcxF,EAAMM,QAAQ,SAK3ByK,GAAa,SAAbA,EAAc,GAIpB,IAJsBhH,EAIvB,EAJuBA,KAAMiH,EAI7B,EAJ6BA,OAAQC,EAIrC,EAJqCA,YAKjCpJ,EAAUyI,KADd,EAEsDxI,mBAAS,IAF/D,mBAEKoJ,EAFL,KAE2BC,EAF3B,OAGkDrJ,mBAAyB,MAH3E,mBAGKsJ,EAHL,KAGyBC,EAHzB,OAIsCvJ,oBAAS,GAJ/C,mBAIKwJ,EAJL,KAImBC,EAJnB,KAKIzF,EAAUC,cAMVyF,EAAe,SAAClE,GAClB6D,EAAwB7D,GACxBiE,GAAgB,IAGpB,SAASE,EAA0BT,GAE/B,OAAO,YAEH,IAFe3I,EAEhB,EAFgBA,QAASjC,EAEzB,EAFyBA,MAGxB,OAAOgG,MAAM,GAAD,OAAI/G,EAAOC,QAAX,gBAAkC,CAC1C+G,OAAQ,OACR4B,KAAM,OACNC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBlI,QAAOiC,UACPqJ,SAAUV,EAAO1D,OAGxBxD,MAAK,SAAAC,GAAI,OAAIA,EAAKuC,UAClBxC,MAAK,SAAA6H,GACkB,MAAhBA,EAAIpD,QAIRyC,EAAO5B,OAAOuC,EAAIpC,SAHdzD,EAAQc,KAAK,cA+B7B,OAvBA/D,qBAAU,WACkB,IAApBkB,EAAK8E,IAAIlB,QACbwD,EAAwBpH,EAAK8E,IAAI,GAAGvB,MACrC,CAACvD,IAEJlB,qBAAU,WACDqI,IACDnH,EAAK+E,OAAOoC,GACZG,EAAsBtH,EAAK+E,OAAOoC,IAElC9E,MAAM,GAAD,OAAI/G,EAAOC,QAAX,wBAAkC4L,GAAwB,CAC3D7E,OAAQ,QAEXvC,MAAK,SAAAC,GAAI,OAAIA,EAAKuC,UAClBxC,MAAK,YAAiC,IAArB8H,EAAoB,EAA7BrC,QAEDA,EAAU,IAAIZ,EAAQiD,GAC1BP,EAAsB9B,GACtBxF,EAAKuF,UAAUC,SAGxB,CAAC2B,EAAsBnH,IAEnB,qCACH,cAACyC,EAAA,EAAD,CAAKrD,UAAWtB,EAAQQ,QAAxB,SAAkC0B,EAAK1B,UACtC2I,GAAU,cAAC,GAAD,CACPnB,OAAO,6IACPpI,SAAUgK,EAA0BT,GACpCjH,KAAMiH,EAAQrB,SAjED,SAACrC,GAClB2D,GAAeA,EAAY3D,IAgEesC,SAAU7F,EAAKuD,KACxD8D,GAAsB,mCACnB,eAACS,EAAA,EAAD,CAAY1I,UAAWtB,EAAQzB,MAAOoD,QAAS,kBAAM+H,GAAiBD,IAAtE,UACI,cAAC5H,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACKyH,EAAmBhL,QAExB,eAACoG,EAAA,EAAD,CAAKrD,UAAWtB,EAAQ6F,OAAxB,qBAAyC0D,EAAmB1D,eAIpE,cAAC,IAAD,UACK,kBAAM,qCACAwD,GAAwBI,IAAiB,cAAC,GAAD,CACxCzB,OAAO,6CACPpI,SAAUgK,EAA0B1H,GACpCA,KAAMA,EAAM4F,SAAU6B,EAAc5B,SAAUsB,SAG1D,cAAC,IAAD,UACK,kBAAM,mCACFE,GACG,cAACL,EAAD,CAEIhH,KAAMqH,EACNJ,OAAQjH,EACRkH,YAAaE,GAHRC,EAAmB9D,a,UC/KnCwE,GAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/BC,EAAUC,eAEhB,OAAO,cAAC7K,EAAA,EAAD,CAAO8K,QAAQ,EAAO7K,UAAU,OAAOyD,IAAKkH,EAA5C,SACFD,K,oBCKH/G,GAAYjF,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXG,MAAO,CACL6E,SAAU,GAEZzE,UAAW,CACT+E,UAAWvF,EAAMM,QAAQ,IAE3B6L,WAAY,CACRC,YAAapM,EAAMM,QAAQ,SAItB+L,GAAU,WACnB,IAAMxK,EAAUmD,KACRsC,EAAOgF,cAAPhF,GAFiB,EAGDxF,mBAAyB,MAHxB,mBAGlBqF,EAHkB,KAGZoF,EAHY,KAInBzG,EAAUC,cAYhB,OAVAlD,qBAAU,WACNuD,MAAM,GAAD,OAAI/G,EAAOC,QAAX,wBAAkCgI,GAAM,CACzCjB,OAAQ,QAEXvC,MAAK,SAAAC,GAAI,OAAIA,EAAKuC,UAClBxC,MAAK,SAAAC,GACFwI,EAAQ,IAAI5D,EAAQ5E,EAAKwF,eAE9B,CAACjC,IAEG,eAACd,EAAA,EAAD,WACH,cAAC,GAAD,UACI,cAACtD,EAAA,EAAD,CAAQ/C,SAAS,SAASiD,MAAM,UAAhC,SACI,eAACC,EAAA,EAAD,CAASM,QAAQ,QAAjB,UACI,cAACL,EAAA,EAAD,CACIE,QAAS,kBAAMsC,EAAQ0G,UACvBjJ,KAAK,QAAQJ,UAAWtB,EAAQsK,WAAY/I,MAAM,UAFtD,SAGI,cAAC,KAAD,MAEJ,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAWtB,EAAQzB,MAA5C,SACK+G,EAAO,cAACR,EAAA,EAAD,CAAM7B,KAAMqC,EAAZ,SAAkB,cAACX,EAAA,EAAD,UAAMW,EAAK/G,UAC/B,cAAC2G,EAAA,EAAD,CAAUC,UAAU,OAAOnG,MAAO,eAKxD,cAAC4L,EAAA,EAAD,CAAWtJ,UAAWtB,EAAQrB,UAA9B,SACI,cAAC,IAAD,UACC,kBAAM,mCACF2G,EACDA,EAAK4B,YACD,cAAC,GAAD,CAAYhF,KAAMoD,IAClB,cAACX,EAAA,EAAD,oBACJ,cAACA,EAAA,EAAD,oC,UCxDHkG,GAAe,WACxB,IAAM5G,EAAUC,cAEhB,OAAO,cAAC7C,EAAA,EAAD,CAAQ/C,SAAS,SAASiD,MAAM,UAAUuJ,UAAW,EAArD,SACH,cAACtJ,EAAA,EAAD,CAASM,QAAQ,QAAjB,SACI,cAACL,EAAA,EAAD,CACIE,QAAS,kBAAMsC,EAAQ0G,UACvBjJ,KAAK,QAAQH,MAAM,UAFvB,SAGI,cAAC,KAAD,WAMV4B,GAAYjF,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXO,UAAW,CACPoM,OAAO,GAAD,OAAK5M,EAAMM,QAAQ,GAAnB,WACNuM,SAAU7M,EAAMM,QAAQ,KAE5BwM,mBAAoB,CAChB3M,SAAU,YAEd4M,UAAW,CACPxH,UAAWvF,EAAMM,QAAQ,IAE7B0M,eAAgB,CACZ7M,SAAU,WACVQ,IAAK,MACLC,KAAM,MACN2E,WAAY,GACZlF,YAAa,IAEjB4M,UAAW,CACPC,QAAS,OACTC,eAAgB,eAKXC,GAAQ,WACjB,IAAMtH,EAAUC,cADO,EAEGjE,mBAAS,IAFZ,mBAEhBuL,EAFgB,KAETC,EAFS,OAGiBxL,oBAAS,GAH1B,mBAGhByL,EAHgB,KAGFC,EAHE,OAImB1L,mBAAS,IAJ5B,mBAIhB2L,EAJgB,KAIDC,EAJC,OAKS5L,mBAAS,IALlB,mBAKhB6L,EALgB,KAKNC,EALM,OAMuB9L,oBAAS,GANhC,mBAMhB+L,EANgB,KAMCC,EAND,OAOyBhM,mBAAS,IAPlC,mBAOhBiM,EAPgB,KAOEC,EAPF,OASWlM,oBAAS,GATpB,mBAShBmM,EATgB,KASLC,EATK,KAUjBlI,EAAQC,qBAAWvG,GAEnBmC,EAAUmD,KAyDhB,OAvDAnC,qBAAU,WACN6K,EAAiB,IACjBF,GAAgB,KACjB,CAACH,IAEJxK,qBAAU,WACNmL,EAAoB,IACpBF,GAAmB,KACpB,CAACH,IA+CG,eAACnH,EAAA,EAAD,WACH,cAAC,GAAD,IACA,eAACxC,EAAA,EAAD,CAAMxD,WAAS,EAAC2C,UAAWtB,EAAQrB,UAAWF,QAAS,EAAvD,UACI,cAAC0D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CACIN,WAAS,EACTQ,MAAOkJ,EACPjJ,WAAYmJ,EACZrJ,MAAOiJ,EACP9I,SAAU,SAAAC,GAAC,OAAI8I,EAAS9I,EAAEC,OAAOL,QACjCM,MAAM,eACNyJ,KAAK,SACLxJ,WAAS,MAGjB,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CACIE,MAAOwJ,EACPvJ,WAAYyJ,EACZ3J,MAAOuJ,EACPQ,KAAK,WACL5J,SAAU,SAAAC,GAAC,OAAIoJ,EAAYpJ,EAAEC,OAAOL,QACpCM,MAAM,eACNC,WAAS,MAGjB,eAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIf,UAAWtB,EAAQiL,mBAAtC,UACI,cAAClJ,EAAA,EAAD,CACIwK,SAAUH,EACVzK,QA1EhB,WACI,IAAI+J,IACAM,EAAJ,CAEA,IAAKR,EAGD,OAFAK,EAAiB,6CACjBF,GAAgB,GAEb,IAAKnO,EAAOE,YAAY8O,KAAKhB,GAGhC,OAFAK,EAAiB,yDACjBF,GAAgB,GAIpBU,GAAa,GACb9H,MAAM,GAAD,OAAI/G,EAAOC,QAAX,qBAAuC,CACxC+G,OAAQ,OACR4B,KAAM,OACNC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB+E,QAAOM,eAGd7J,MAAK,SAAAC,GAAI,OAAIA,EAAKuC,UAClBxC,MAAK,SAAAC,GAEF,GADAmK,GAAa,IACRnK,EAAKwE,QAIN,OAHAzC,EAAQ0G,SACRxG,EAAMsI,YAAW,QACjBtI,EAAMuI,YAAYxK,EAAKyK,MAGN,IAAjBzK,EAAKwE,SACLmF,EAAiB3J,EAAK0K,QACtBjB,GAAgB,IACQ,IAAjBzJ,EAAKwE,UACZyF,EAAoBjK,EAAK0K,QACzBX,GAAmB,SAmCf3K,UAAWtB,EAAQkL,UAAWpJ,QAAQ,WAAWP,MAAM,UAAUuB,WAAS,EAH9E,0BAMCsJ,GAAa,cAACS,GAAA,EAAD,CAAkBC,KAAM,GAAIxL,UAAWtB,EAAQmL,oBAEjE,cAAChJ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIf,UAAWtB,EAAQoL,UAAtC,SACI,eAACvJ,EAAA,EAAD,CAAYC,QAAQ,UAApB,yEACc,cAAC,IAAD,CAAMoE,GAAG,WAAT,sCClJxB/C,GAAYjF,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXO,UAAW,CACPoM,OAAO,GAAD,OAAK5M,EAAMM,QAAQ,GAAnB,WACNuM,SAAU7M,EAAMM,QAAQ,KAE5BwM,mBAAoB,CAChB3M,SAAU,YAEd4M,UAAW,CACPxH,UAAWvF,EAAMM,QAAQ,IAE7B0M,eAAgB,CACZ7M,SAAU,WACVQ,IAAK,MACLC,KAAM,MACN2E,WAAY,GACZlF,YAAa,SAKRuO,GAAS,WAClB,IAAM9I,EAAUC,cADQ,EAGAjE,mBAAS,IAHT,mBAGjBgF,EAHiB,KAGX+H,EAHW,OAIc/M,oBAAS,GAJvB,mBAIjBgN,EAJiB,KAIJC,EAJI,OAKgBjN,mBAAS,IALzB,mBAKjBkN,EALiB,KAKHC,EALG,OAOEnN,mBAAS,IAPX,mBAOjBuL,EAPiB,KAOVC,EAPU,OAQgBxL,oBAAS,GARzB,mBAQjByL,EARiB,KAQHC,EARG,OASkB1L,mBAAS,IAT3B,mBASjB2L,EATiB,KASFC,EATE,OAWQ5L,mBAAS,IAXjB,mBAWjB6L,EAXiB,KAWPC,EAXO,OAYsB9L,oBAAS,GAZ/B,mBAYjB+L,EAZiB,KAYAC,EAZA,OAawBhM,mBAAS,IAbjC,mBAajBiM,EAbiB,KAaCC,EAbD,OAeclM,mBAAS,IAfvB,mBAejBoN,EAfiB,KAeJC,EAfI,OAgB4BrN,oBAAS,GAhBrC,mBAgBjBsN,EAhBiB,KAgBGC,GAhBH,QAiB8BvN,mBAAS,IAjBvC,qBAiBjBwN,GAjBiB,MAiBIC,GAjBJ,SAmBUzN,oBAAS,GAnBnB,qBAmBjBmM,GAnBiB,MAmBNC,GAnBM,MAoBlBlI,GAAQC,qBAAWvG,GAEnBmC,GAAUmD,KA8FhB,OA5FAnC,qBAAU,WACNoM,EAAgB,IAChBF,GAAe,KAChB,CAACjI,IAEJjE,qBAAU,WACN6K,EAAiB,IACjBF,GAAgB,KACjB,CAACH,IAEJxK,qBAAU,WACNmL,EAAoB,IACpBF,GAAmB,KACpB,CAACH,IAEJ9K,qBAAU,WACN0M,GAAuB,IACvBF,IAAsB,KACvB,CAACH,IA0EG,eAAC1I,EAAA,EAAD,WACH,cAAC,GAAD,IACA,eAACxC,EAAA,EAAD,CAAMxD,WAAS,EAAC2C,UAAWtB,GAAQrB,UAAWF,QAAS,EAAvD,UACI,cAAC0D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CACIN,WAAS,EACTQ,MAAOyK,EACPxK,WAAY0K,EACZ5K,MAAO0C,EACPvC,SAAU,SAAAC,GAAC,OAAIqK,EAAQrK,EAAEC,OAAOL,QAChCM,MAAM,eACNC,WAAS,MAGjB,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CACIE,MAAOkJ,EACPjJ,WAAYmJ,EACZrJ,MAAOiJ,EACP9I,SAAU,SAAAC,GAAC,OAAI8I,EAAS9I,EAAEC,OAAOL,QACjCM,MAAM,eACNyJ,KAAK,SACLxJ,WAAS,MAGjB,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CACIE,MAAOwJ,EACPvJ,WAAYyJ,EACZ3J,MAAOuJ,EACPQ,KAAK,WACL5J,SAAU,SAAAC,GAAC,OAAIoJ,EAAYpJ,EAAEC,OAAOL,QACpCM,MAAM,eACNC,WAAS,MAGjB,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CACIE,MAAO+K,EACP9K,WAAYgL,GACZlL,MAAO8K,EACPf,KAAK,WACL5J,SAAU,SAAAC,GAAC,OAAI2K,EAAe3K,EAAEC,OAAOL,QACvCM,MAAM,2BACNC,WAAS,MAGjB,eAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIf,UAAWtB,GAAQiL,mBAAtC,UACI,cAAClJ,EAAA,EAAD,CACIwK,SAAUH,GACVzK,QA1HhB,WACI,OAAK6J,EAIOhO,EAAOE,YAAY8O,KAAKhB,GAM/BvG,EAIOzH,EAAOI,WAAW4O,KAAKvH,GAM9B6G,EAIOtO,EAAOG,eAAe6O,KAAKV,GAI3BuB,EAIDvB,IAAauB,GACpBK,GAAuB,0DACvBF,IAAsB,QACtBvB,GAAmB,KAIvBI,IAAa,QACb9H,MAAM,GAAD,OAAI/G,EAAOC,QAAX,qBAAuC,CACxC+G,OAAQ,OACR4B,KAAM,OACNC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB+E,QAAOM,WAAU7G,WAGxBhD,MAAK,SAAAC,GAAI,OAAIA,EAAKuC,UAClBxC,MAAK,SAAAC,GAEF,GADAmK,IAAa,IACRnK,EAAKwE,QAIN,OAHAvC,GAAMsI,YAAW,GACjBtI,GAAMuI,YAAYxK,EAAKyK,WACvB1I,EAAQc,KAAK,KAII,IAAjB7C,EAAKwE,SACLmF,EAAiB,oDACjBF,GAAgB,IACQ,IAAjBzJ,EAAKwE,UACZ0G,EAAgB,wCAChBF,GAAe,SArCnBQ,GAAuB,+DACvBF,IAAsB,KALtBrB,EAAoB,iIACpBF,GAAmB,KALnBE,EAAoB,uCACpBF,GAAmB,KAPnBmB,EAAgB,uFAChBF,GAAe,KALfE,EAAgB,uCAChBF,GAAe,KAPfrB,EAAiB,yDACjBF,GAAgB,KALhBE,EAAiB,6CACjBF,GAAgB,KAwHRrK,UAAWtB,GAAQkL,UAAWpJ,QAAQ,WAAWP,MAAM,UAAUuB,WAAS,EAH9E,0BAMCsJ,IAAa,cAACS,GAAA,EAAD,CAAkBC,KAAM,GAAIxL,UAAWtB,GAAQmL,2BC/LvEhI,GAAYjF,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTO,UAAW,CACPC,QAAST,EAAMM,QAAQ,SAKtBkP,GAAS,WAClB,IAAMxJ,EAAQC,qBAAWvG,GACnBoG,EAAUC,cACVlE,EAAUmD,KAQhB,SAASyK,IACLrJ,MAAM,GAAD,OAAI/G,EAAOC,QAAX,oBAAsC,CACvC+G,OAAQ,OACR4B,KAAM,OACNC,YAAa,UACbC,QAAS,CACL,eAAgB,sBAGvBrE,MAAK,SAAAC,GACFiC,EAAMsI,YAAW,GACjBtI,EAAMuI,YAAY,CACdlB,MAAO,GACPvG,KAAM,GACNQ,GAAI,KAERxB,EAAQ4J,QAAQ,QAIxB,OA1BA7M,qBAAU,kBAAM8M,aAAQ,WAChB3J,EAAMS,iBAAmBT,EAAMU,SAC/BZ,EAAQ4J,QAAQ,eAEpB,CAAC1J,EAAOF,IAsBL,eAACU,EAAA,EAAD,WACH,cAAC,GAAD,IACA,cAAC,IAAD,UACK,kBACD,eAACxC,EAAA,EAAD,CAAMxD,WAAS,EAACF,QAAS,EAAG6C,UAAWtB,EAAQrB,UAA/C,UACI,eAACwD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,+BACQ8B,EAAMa,SAASC,QAEvB,eAAC9C,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,+BACQ8B,EAAMa,SAASwG,SAEvB,cAACrJ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAACN,EAAA,EAAD,CAAQe,WAAS,EAAChB,QAAQ,WAAWH,QAASiM,EAA9C,kDCVLG,GAtCH,WACV,IAAM5J,EAAQC,qBAAWvG,GAkBzB,OAhBAmD,qBAAU,WACRuD,MAAM,GAAD,OAAI/G,EAAOC,QAAX,kBAAoC,CACvC+G,OAAQ,MACR6B,YAAa,YAEdpE,MAAK,SAAAC,GAAI,OAAIA,EAAKuC,UAClBxC,MAAK,SAAAC,GACiB,MAAjBA,EAAKwE,QACPvC,EAAMsI,YAAW,IAEjBtI,EAAMsI,YAAW,GACjBtI,EAAMuI,YAAYxK,EAAKyK,YAG1B,CAACxI,IAEG,eAAC,IAAD,WACL,cAAC,IAAD,CAAO6J,KAAK,IAAIC,OAAO,EAAvB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,UC/BSE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnM,MAAK,YAAkD,IAA/CoM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,UCARjM,GAAO,ICPb,WASI,aAAe,yBARR2C,SAAU,EAQH,KAPPD,gBAAiB,EAOV,KANPI,SAAW,CACdwG,MAAO,GACPvG,KAAM,GACNQ,GAAI,IAIJ4B,YAAeF,KAAM,CACjBtC,QAASyC,IACT1C,eAAgB0C,IAChBtC,SAAUsC,IACVmF,WAAYjF,IACZkF,YAAalF,MAfzB,uDAmBekH,GACPvH,KAAKtC,QAAU6J,EACfvH,KAAKvC,gBAAiB,IArB9B,kCAwBgB+H,GAKRxF,KAAKnC,SAAW2H,MA7BxB,MDaAgC,IAASC,OACP,eAAC7Q,EAAD,CAAewE,MAAOL,GAAtB,UACE,cAAC2M,GAAA,EAAD,IACA,cAAC,GAAD,OAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.c16f18b3.chunk.js","sourcesContent":["const isProd = process.env.NODE_ENV === 'production';\n\nexport const config = {\n    apiHost: isProd ? '' : 'http://localhost:3008',\n    phoneRegExp: /^1[3|4|5|7|8][0-9]{9}$/,\n    passwordRegExp: /(?=.*([a-zA-Z].*))(?=.*[0-9].*)[a-zA-Z0-9-*/+.~!@#$%^&*()]{6,20}$/,\n    nickRegExp: /^\\S{4,20}$/,\n};\n","import { createContext } from 'react';\nimport { Store } from './store';\n\nexport const StoreContext = createContext<Store>({} as Store);\nexport const StoreProvider = StoreContext.Provider;\n","import { AppBar, Box, Button, createStyles, Dialog, Fab, Fade, Grid, IconButton, Link, LinearProgress, List, ListItem, ListItemText, makeStyles, Slide, TextField, Theme, Toolbar, Typography } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Observer } from 'mobx-react';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { config } from '../config';\nimport { StoreContext } from '../store';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\nconst useAddChapterDialogStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n          position: 'relative',\n        },\n        title: {\n          marginLeft: theme.spacing(2),\n          flex: 1,\n        },\n        container: {\n            padding: theme.spacing(2),\n        },\n        progress: {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100vw',\n            zIndex: 10000\n        }\n    })\n);\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const AddChapterDialog = ({\n    open, handleClose, onSubmit, titleLabel, dialogTitle, contentPlaceHolder\n}: {\n    open: boolean;\n    handleClose: () => void;\n    onSubmit: (arg: {\n        content: string;\n        title: string;\n    }) => Promise<void>;\n    titleLabel: string;\n    dialogTitle: string;\n    contentPlaceHolder: string;\n}) => {\n    const classes = useAddChapterDialogStyles();\n    const [name, setName] = useState('');\n    const [isNameError, setIsNameError] = useState(false);\n    const [nameErrorMsg, setNameErrorMsg] = useState('');\n    const [content, setContent] = useState('');\n    const [isContentError, setIsContentError] = useState(false);\n    const [contentErrorMsg, setContentErrorMsg] = useState('');\n    const [pending, setPending] = useState(false);\n\n    useEffect(() => {\n        setIsNameError(false);\n        setNameErrorMsg('');\n    }, [name]);\n\n    useEffect(() => {\n        setIsContentError(false);\n        setContentErrorMsg('');\n    }, [content]);\n\n    function handleSubmit() {\n        if (!name) {\n            setIsNameError(true);\n            setNameErrorMsg(`${titleLabel}不能为空`);\n            return;\n        }\n        if (!content) {\n            setIsContentError(true);\n            setContentErrorMsg('内容不能为空');\n            return;\n        }\n\n        setPending(true);\n        onSubmit({ content, title: name })\n            .then(data => {\n                setPending(false);\n                handleClose();\n            });\n    }\n\n    return <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar} color=\"default\">\n            <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n                {dialogTitle}\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleSubmit}>\n                提交\n            </Button>\n            </Toolbar>\n        </AppBar>\n        <Grid container spacing={4} className={classes.container}>\n            <Grid item xs={12}>\n                <TextField\n                    autoFocus\n                    value={name}\n                    error={isNameError}\n                    helperText={nameErrorMsg}\n                    onChange={e => setName(e.target.value)}\n                    label={titleLabel}\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"内容\"\n                    value={content}\n                    error={isContentError}\n                    helperText={contentErrorMsg}\n                    onChange={e => setContent(e.target.value)}\n                    fullWidth\n                    multiline\n                    placeholder={contentPlaceHolder}\n                />\n            </Grid>\n        </Grid>\n        <Slide in={pending} direction=\"down\">\n            <LinearProgress className={classes.progress} />\n        </Slide>\n    </Dialog>;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      flexGrow: 1\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n    loginTips: {\n        textAlign: 'center',\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10),\n        color: theme.palette.grey[400],\n    }\n  })\n);\n\nexport const Home = () => {\n    const classes = useStyles();\n    const [bookList, setBookList] = useState<{\n        title: string;\n        author: string;\n        id: string;\n        content: string;\n        sub: any[];\n    }[]>([]);\n    const history = useHistory();\n    const store = useContext(StoreContext);\n\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n    useEffect(() => {\n\n        fetch(`${config.apiHost}/api/book`, { method: 'get' })\n            .then(data => data.json())\n            .then(data => {\n                setBookList(data.books);\n            });\n    }, []);\n\n    function handleClickBook(id: string) {\n        history.push(`/book/${id}`);\n    }\n\n    function handleCreateBookSubmit({ content, title }: {\n        content: string; title: string;\n    }) {\n        return fetch(`${config.apiHost}/api/book`, {\n            method: 'post',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                title,\n                content,\n            }),\n        })\n        .then(data => data.json())\n        .then(data => {\n\n            if (data.errCode === 1000) {\n                history.push('/login');\n                return;\n            }\n\n            handleCreateBook(data.book);\n        });\n    }\n\n    function handleCreateBook(book: {\n        title: string;\n        author: string;\n        id: string;\n        content: string;\n        sub: any[];\n    }) {\n        setBookList([...bookList, book]);\n    }\n\n    return <Box>\n        <AppBar position=\"sticky\" color=\"primary\">\n            <Toolbar variant=\"dense\">\n                <Typography variant=\"h6\" className={classes.title}>\n                    ZBOOK\n                </Typography>\n                <Observer>\n                    {() => <>\n                        {store.isIsLoginReady ? <>\n                            {store.isLogin ?\n                                <Fade in={store.isLogin}>\n                                    <Button color=\"inherit\" onClick={() => history.push('/center')}>{store.userInfo.nick}</Button>\n                                </Fade> :\n                                <Fade in={!store.isLogin}>\n                                    <Button color=\"inherit\" onClick={() => history.push('/login')}>Login</Button>\n                                </Fade>}\n                        </> : <Skeleton animation=\"wave\" width={60} />}\n                    </>}\n                </Observer>\n            </Toolbar>\n        </AppBar>\n        <List>\n            {bookList.map((book: any) =>\n                <ListItem button key={book.id} onClick={() => handleClickBook(book.id)}>\n                    <ListItemText primary={book.title} secondary={book.content}/>\n                    <Box>{book.author}</Box>\n                </ListItem>)}\n        </List>\n        <Observer>\n            {() => <>\n                {!store.isLogin && bookList.length > 0 && <Box className={classes.loginTips}>\n                    <Typography variant=\"caption\">\n                        快去<Link component={RouterLink} to=\"/login\">登录</Link>开始自己的创作吧～\n                    </Typography>\n                </Box>}\n                {store.isLogin && <Fab className={classes.fab} color=\"primary\" onClick={() => setOpenAddDialog(true)}>\n                    <AddIcon />\n                </Fab>}\n            </>}\n        </Observer>\n        <AddChapterDialog\n            open={openAddDialog}\n            dialogTitle=\"创建图书\"\n            contentPlaceHolder=\"本书前言部分内容\"\n            titleLabel=\"书名\"\n            handleClose={() => setOpenAddDialog(false)}\n            onSubmit={handleCreateBookSubmit} />\n    </Box>;\n}\n","import { action, makeObservable, observable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nconsole.log(uuidv4());\nexport class Chapter {\n    public title: string = '';\n    public author: string = '';\n    public content: string = '';\n    public sub: {\n        id: string;\n        title: string;\n        author: string;\n    }[] = [];\n    public subMap: { [key: string]: Chapter } = {};\n    public id: string = '';\n\n    public initialized = false;\n\n\n    constructor(source?: any) {\n\n        if (source) {\n            this.initialize(source);\n        }\n\n        makeObservable(this, {\n            initialized: observable,\n            id: observable,\n            title: observable,\n            author: observable,\n            content: observable,\n            sub: observable,\n            subMap: observable,\n            addSub: action,\n            addSubMap: action,\n            initialize: action,\n        });\n    }\n\n    initialize(source: any) {\n        this.id = source.id || uuidv4();\n        this.title = source.title;\n        this.author = source.author;\n        this.content = source.content;\n        this.sub = (source.sub || []);\n\n        this.initialized = true;\n    }\n\n    addSub(source: {\n        title: string;\n        author: string;\n        content: string;\n        id: string;\n    }) {\n        this.sub.push({\n            id: source.id,\n            title: source.title,\n            author: source.author,\n        });\n        this.addSubMap(new Chapter(source));\n    }\n\n    addSubMap(chapter: Chapter) {\n        this.subMap[chapter.id] = chapter;\n    }\n}","import { Box, createStyles, List, ListItem, ListItemIcon, ListItemText, ListSubheader, makeStyles, Radio, Theme } from '@material-ui/core';\nimport { Observer } from 'mobx-react';\nimport React from 'react';\nimport { Chapter } from '../store/chapter';\nimport { AddChapter } from './Chapter';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            marginTop: theme.spacing(2),\n            backgroundColor: theme.palette.grey[300],\n        },\n        addChapterBox: {\n            padding: theme.spacing(4),\n        }\n    })\n);\n\nexport const ChapterSelector = ({ data, onSelect, selectId, onSubmit, header }: {\n    data: Chapter;\n    selectId: String;\n    onSelect: Function;\n    onSubmit: (arg: {\n        content: string;\n        title: string;\n    }) => Promise<void>;\n    header: string;\n}) => {\n    const classes = useStyles();\n\n    return <Box className={classes.container}>\n        {data.sub.length !== 0 && <Observer>\n            {() => <List\n                subheader={\n                    <ListSubheader disableSticky={true}>\n                        {header}\n                    </ListSubheader>\n                }\n            >\n                {data.sub.map(item => <ListItem button key={item.id} onClick={() => onSelect(item.id)}>\n                    <ListItemIcon>\n                        <Radio checked={item.id === selectId}/>\n                    </ListItemIcon>\n                    <ListItemText primary={item.title} />\n                </ListItem>)}\n            </List>}\n        </Observer>}\n        <Box className={classes.addChapterBox}>\n            <AddChapter onSubmit={onSubmit}/>\n        </Box>\n    </Box>;\n}\n","import { Box, Button, ButtonBase, createStyles, makeStyles, Theme, Typography, Link } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Chapter } from '../store/chapter';\nimport { Observer } from 'mobx-react';\nimport { ChapterSelector } from './ChapterSelector';\nimport { config } from '../config';\nimport { AddChapterDialog } from './Home';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { StoreContext } from '../store';\n\nconst useAddChapterStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loginTips: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        color: theme.palette.grey[400],\n    }\n  })\n);\n\nexport const AddChapter = ({ onSubmit }: {\n    onSubmit: (arg: {\n        content: string;\n        title: string;\n    }) => Promise<void>;\n}) => {\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n    const store = useContext(StoreContext);\n    const classes = useAddChapterStyles();\n\n    return <Observer>\n        {() => <>\n            {store.isLogin ? <>\n                <Button onClick={() => setOpenAddDialog(true)} fullWidth variant=\"outlined\">创作章节</Button>\n                <AddChapterDialog\n                    titleLabel=\"标题\"\n                    dialogTitle=\"添加章节\"\n                    contentPlaceHolder=\"本章内容...\"\n                    open={openAddDialog}\n                    handleClose={() => setOpenAddDialog(false)}\n                    onSubmit={onSubmit} />\n            </> :\n            <Box className={classes.loginTips}>\n                <Typography variant=\"caption\">\n                    快去<Link to=\"/login\" component={RouterLink}>登录</Link>开始自己对本章的创作吧～\n                </Typography>\n            </Box>}\n        </>}\n    </Observer>;\n}\n\nconst useChapterBoxStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginTop: theme.spacing(8),\n            width: '100%',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n        },\n        author: {\n            fontWeight: 400,\n            color: theme.palette.grey[400],\n            fontSize: theme.spacing(2),\n            textAlign: 'right',\n            width: '100%',\n            marginTop: theme.spacing(1),\n        },\n        content: {\n            marginTop: theme.spacing(6),\n            textIndent: theme.spacing(4),\n            lineHeight: theme.spacing(.22),\n        },\n        selectorContainer: {\n            paddingLeft: theme.spacing(3),\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n        }\n    })\n);\n\nexport const ChapterBox = ({ data, parent, setParentId }: {\n    data: Chapter;\n    parent?: Chapter;\n    setParentId?: Function;\n}) => {\n    const classes = useChapterBoxStyles();\n    const [selectedSubChapterId, setSelectedSubChapterId] = useState('');\n    const [selectedSubChapter, setSelectedSubChapter] = useState<Chapter | null>(null);\n    const [showSelector, setShowSelector] = useState(false);\n    const history = useHistory();\n\n    const handleSelect = (id: string) => {\n        setParentId && setParentId(id);\n    }\n\n    const handleChange = (id: string) => {\n        setSelectedSubChapterId(id);\n        setShowSelector(false);\n    }\n\n    function handleCreateChapterSubmit(parent: Chapter) {\n\n        return function ({ content, title }: {\n            content: string; title: string;\n        }) {\n            return fetch(`${config.apiHost}/api/chapter`, {\n                method: 'post',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    title, content,\n                    parentId: parent.id,\n                }),\n            })\n            .then(data => data.json())\n            .then(res => {\n                if (res.errCode === 1000) {\n                    history.push('/login');\n                    return;\n                }\n                parent.addSub(res.chapter);\n            });\n        }\n    }\n\n    useEffect(() => {\n        if (data.sub.length === 0) return;\n        setSelectedSubChapterId(data.sub[0].id);\n    }, [data]);\n\n    useEffect(() => {\n        if (!selectedSubChapterId) return;\n        if (data.subMap[selectedSubChapterId]) {\n            setSelectedSubChapter(data.subMap[selectedSubChapterId]);\n        } else {\n            fetch(`${config.apiHost}/api/chapter/${selectedSubChapterId}`, {\n                method: 'get'\n            })\n            .then(data => data.json())\n            .then(({ chapter: chapterSource }) => {\n                // console.log('res', res);\n                let chapter = new Chapter(chapterSource);\n                setSelectedSubChapter(chapter);\n                data.addSubMap(chapter);\n            });\n        }\n    }, [selectedSubChapterId, data]);\n\n    return <>\n        <Box className={classes.content}>{data.content}</Box>\n        {parent && <ChapterSelector\n            header=\"觉得本章看的不过瘾？看看其他同样优秀的版本吧：\"\n            onSubmit={handleCreateChapterSubmit(parent)}\n            data={parent} onSelect={handleSelect} selectId={data.id} />}\n        {selectedSubChapter && <>\n            <ButtonBase className={classes.title} onClick={() => setShowSelector(!showSelector)}>\n                <Typography variant=\"h4\">\n                    {selectedSubChapter.title}\n                </Typography>\n                <Box className={classes.author}>author: {selectedSubChapter.author}</Box>\n            </ButtonBase>\n        </>}\n        \n        <Observer>\n            {() => <>\n                {(!selectedSubChapterId || showSelector) && <ChapterSelector\n                    header=\"本章其他分支：\"\n                    onSubmit={handleCreateChapterSubmit(data)}\n                    data={data} onSelect={handleChange} selectId={selectedSubChapterId} />}\n            </>}\n        </Observer>\n        <Observer>\n            {() => <>\n                {selectedSubChapter &&\n                    <ChapterBox\n                        key={selectedSubChapter.id}\n                        data={selectedSubChapter}\n                        parent={data}\n                        setParentId={setSelectedSubChapterId} />\n                }\n            </>}\n        </Observer>\n    </>;\n}","import { Slide, useScrollTrigger } from '@material-ui/core';\nimport React from 'react';\n\nexport const HideOnScroll: React.FC = ({ children }) => {\n    const trigger = useScrollTrigger();\n\n    return <Slide appear={false} direction=\"down\" in={!trigger}>\n        {children as any}\n    </Slide>\n}\n","import { AppBar, Box, Container, createStyles, Fade, IconButton, makeStyles, Theme, Toolbar, Typography } from '@material-ui/core';\nimport { Observer } from 'mobx-react';\nimport React, { useEffect, useState } from 'react';\nimport { ChapterBox } from './Chapter';\nimport { config } from '../config';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { HideOnScroll } from './HideOnScroll';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Chapter } from '../store/chapter';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      flexGrow: 1\n    },\n    container: {\n      marginTop: theme.spacing(3),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    }\n  })\n);\nexport const BookBox = () => {\n    const classes = useStyles();\n    const { id } = useParams() as any;\n    const [book, setBook] = useState<Chapter | null>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        fetch(`${config.apiHost}/api/chapter/${id}`, {\n            method: 'get'\n        })\n        .then(data => data.json())\n        .then(data => {\n            setBook(new Chapter(data.chapter));\n        });\n    }, [id]);\n  \n    return <Box>\n        <HideOnScroll>\n            <AppBar position=\"sticky\" color=\"default\">\n                <Toolbar variant=\"dense\">\n                    <IconButton\n                        onClick={() => history.goBack()}\n                        edge=\"start\" className={classes.menuButton} color=\"inherit\">\n                        <ArrowBackIosIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {book ? <Fade in={!!book}><Box>{book.title}</Box></Fade>\n                            : <Skeleton animation=\"wave\" width={100} />}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </HideOnScroll>\n        <Container className={classes.container}>\n            <Observer>\n            {() => <>\n                {book ?\n                book.initialized ?\n                    <ChapterBox data={book} /> :\n                    <Box>error</Box> :\n                <Box>waiting...</Box>}\n            </>}\n            </Observer>\n        </Container>\n    </Box>;\n}\n","import { AppBar, Box, Button, Theme, Grid, IconButton, makeStyles, TextField, Toolbar, createStyles, Typography } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Link, useHistory } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { config } from '../config';\nimport { StoreContext } from '../store';\n\nexport const SimpleAppBar = () => {\n    const history = useHistory();\n\n    return <AppBar position=\"sticky\" color=\"inherit\" elevation={0}>\n        <Toolbar variant=\"dense\">\n            <IconButton\n                onClick={() => history.goBack()}\n                edge=\"start\" color=\"inherit\">\n                <ArrowBackIosIcon />\n            </IconButton>\n        </Toolbar>\n    </AppBar>;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        margin: `${theme.spacing(4)}px auto`,\n        maxWidth: theme.spacing(40),\n    },\n    submitBtnContainer: {\n        position: 'relative',\n    },\n    submitBtn: {\n        marginTop: theme.spacing(1),\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -10,\n        marginLeft: -12,\n    },\n    signInBox: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n  })\n);\n\nexport const Login = () => {\n    const history = useHistory();\n    const [phone, setPhone] = useState('');\n    const [isPhoneError, setIsPhoneError] = useState(false);\n    const [phoneErrorMsg, setPhoneErrorMsg] = useState('');\n    const [password, setPassword] = useState('');\n    const [isPasswordError, setIsPasswordError] = useState(false);\n    const [passwordErrorMsg, setPasswordErrorMsg] = useState('');\n\n    const [isPending, setIsPending] = useState(false);\n    const store = useContext(StoreContext);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setPhoneErrorMsg('');\n        setIsPhoneError(false);\n    }, [phone]);\n\n    useEffect(() => {\n        setPasswordErrorMsg('');\n        setIsPasswordError(false);\n    }, [password]);\n\n    function onSubmit() {\n        if (isPhoneError) return;\n        if (isPasswordError) return;\n\n        if (!phone) {\n            setPhoneErrorMsg('请输入手机号');\n            setIsPhoneError(true);\n            return;\n        } else if (!config.phoneRegExp.test(phone)) {\n            setPhoneErrorMsg('请输入正确手机号');\n            setIsPhoneError(true);\n            return;\n        }\n\n        setIsPending(true);\n        fetch(`${config.apiHost}/api/user/sign-in`, {\n            method: 'post',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                phone, password\n            }),\n        })\n        .then(data => data.json())\n        .then(data => {\n            setIsPending(false);\n            if (!data.errCode) {\n                history.goBack();\n                store.setIsLogin(true);\n                store.setUserInfo(data.info);\n                return;\n            }\n            if (data.errCode === 1) {\n                setPhoneErrorMsg(data.errMsg);\n                setIsPhoneError(true);\n            } else if (data.errCode === 2) {\n                setPasswordErrorMsg(data.errMsg);\n                setIsPasswordError(true);\n            }\n        });\n    }\n\n    return <Box>\n        <SimpleAppBar />\n        <Grid container className={classes.container} spacing={4}>\n            <Grid item xs={12}>\n                <TextField\n                    autoFocus\n                    error={isPhoneError}\n                    helperText={phoneErrorMsg}\n                    value={phone}\n                    onChange={e => setPhone(e.target.value)}\n                    label=\"手机\"\n                    type=\"number\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    error={isPasswordError}\n                    helperText={passwordErrorMsg}\n                    value={password}\n                    type=\"password\"\n                    onChange={e => setPassword(e.target.value)}\n                    label=\"密码\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12} className={classes.submitBtnContainer}>\n                <Button\n                    disabled={isPending}\n                    onClick={onSubmit}\n                    className={classes.submitBtn} variant=\"outlined\" color=\"primary\" fullWidth>\n                    登录\n                </Button>\n                {isPending && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </Grid>\n            <Grid item xs={12} className={classes.signInBox}>\n                <Typography variant=\"caption\">\n                    还没有账号，立即前往<Link to=\"/sign-up\">注册</Link>\n                </Typography>\n            </Grid>\n        </Grid>\n    </Box>;\n}\n","import { Box, Button, CircularProgress, createStyles, Grid, makeStyles, TextField, Theme } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { StoreContext } from '../store';\nimport { SimpleAppBar } from './Login';\nimport { config } from '../config';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        margin: `${theme.spacing(4)}px auto`,\n        maxWidth: theme.spacing(40),\n    },\n    submitBtnContainer: {\n        position: 'relative',\n    },\n    submitBtn: {\n        marginTop: theme.spacing(1),\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -10,\n        marginLeft: -12,\n    },\n  })\n);\n\nexport const SignUp = () => {\n    const history = useHistory();\n\n    const [nick, setNick] = useState('');\n    const [isNickError, setIsNickError] = useState(false);\n    const [nickErrorMsg, setNickErrorMsg] = useState('');\n\n    const [phone, setPhone] = useState('');\n    const [isPhoneError, setIsPhoneError] = useState(false);\n    const [phoneErrorMsg, setPhoneErrorMsg] = useState('');\n\n    const [password, setPassword] = useState('');\n    const [isPasswordError, setIsPasswordError] = useState(false);\n    const [passwordErrorMsg, setPasswordErrorMsg] = useState('');\n\n    const [passwordSec, setPasswordSec] = useState('');\n    const [isPasswordSecError, setIsPasswordSecError] = useState(false);\n    const [passwordSecErrorMsg, setPasswordSecErrorMsg] = useState('');\n\n    const [isPending, setIsPending] = useState(false);\n    const store = useContext(StoreContext);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setNickErrorMsg('');\n        setIsNickError(false);\n    }, [nick]);\n\n    useEffect(() => {\n        setPhoneErrorMsg('');\n        setIsPhoneError(false);\n    }, [phone]);\n\n    useEffect(() => {\n        setPasswordErrorMsg('');\n        setIsPasswordError(false);\n    }, [password]);\n\n    useEffect(() => {\n        setPasswordSecErrorMsg('');\n        setIsPasswordSecError(false);\n    }, [passwordSec]);\n\n    function onSubmit() {\n        if (!phone) {\n            setPhoneErrorMsg('请输入手机号');\n            setIsPhoneError(true);\n            return;\n        } else if (!config.phoneRegExp.test(phone)) {\n            setPhoneErrorMsg('请输入正确手机号');\n            setIsPhoneError(true);\n            return;\n        }\n\n        if (!nick) {\n            setNickErrorMsg('请输入昵称');\n            setIsNickError(true);\n            return;\n        } else if (!config.nickRegExp.test(nick)) {\n            setNickErrorMsg('昵称格式不符合要求(4-20个字符)');\n            setIsNickError(true);\n            return;\n        }\n\n        if (!password) {\n            setPasswordErrorMsg('请设置密码');\n            setIsPasswordError(true);\n            return;\n        } else if (!config.passwordRegExp.test(password)) {\n            setPasswordErrorMsg('密码格式不正确(必须有数字和字母，6-20个字符)');\n            setIsPasswordError(true);\n            return;\n        } else if (!passwordSec) {\n            setPasswordSecErrorMsg('请输入二次确认密码');\n            setIsPasswordSecError(true);\n            return;\n        } else if (password !== passwordSec) {\n            setPasswordSecErrorMsg('两次输入密码不相同');\n            setIsPasswordSecError(true);\n            setIsPasswordError(true);\n            return;\n        }\n\n        setIsPending(true);\n        fetch(`${config.apiHost}/api/user/sign-up`, {\n            method: 'post',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                phone, password, nick\n            }),\n        })\n        .then(data => data.json())\n        .then(data => {\n            setIsPending(false);\n            if (!data.errCode) {\n                store.setIsLogin(true);\n                store.setUserInfo(data.info);\n                history.push('/');\n                return;\n            }\n\n            if (data.errCode === 4) {\n                setPhoneErrorMsg('该手机号已被注册');\n                setIsPhoneError(true);\n            } else if (data.errCode === 5) {\n                setNickErrorMsg('该昵称已存在');\n                setIsNickError(true);\n            }\n        });\n    }\n\n    return <Box>\n        <SimpleAppBar />\n        <Grid container className={classes.container} spacing={4}>\n            <Grid item xs={12}>\n                <TextField\n                    autoFocus\n                    error={isNickError}\n                    helperText={nickErrorMsg}\n                    value={nick}\n                    onChange={e => setNick(e.target.value)}\n                    label=\"昵称\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    error={isPhoneError}\n                    helperText={phoneErrorMsg}\n                    value={phone}\n                    onChange={e => setPhone(e.target.value)}\n                    label=\"手机\"\n                    type=\"number\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    error={isPasswordError}\n                    helperText={passwordErrorMsg}\n                    value={password}\n                    type=\"password\"\n                    onChange={e => setPassword(e.target.value)}\n                    label=\"密码\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    error={isPasswordSecError}\n                    helperText={passwordSecErrorMsg}\n                    value={passwordSec}\n                    type=\"password\"\n                    onChange={e => setPasswordSec(e.target.value)}\n                    label=\"确认密码\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12} className={classes.submitBtnContainer}>\n                <Button\n                    disabled={isPending}\n                    onClick={onSubmit}\n                    className={classes.submitBtn} variant=\"outlined\" color=\"primary\" fullWidth>\n                    注册\n                </Button>\n                {isPending && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </Grid>\n        </Grid>\n    </Box>;\n}\n","import { Box, Button, createStyles, Grid, makeStyles, Theme } from '@material-ui/core';\nimport { autorun } from 'mobx';\nimport { Observer } from 'mobx-react';\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { config } from '../config';\nimport { StoreContext } from '../store';\nimport { SimpleAppBar } from './Login';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            padding: theme.spacing(4),\n        }\n    })\n);\n\nexport const Center = () => {\n    const store = useContext(StoreContext);\n    const history = useHistory();\n    const classes = useStyles();\n\n    useEffect(() => autorun(() => {\n        if (store.isIsLoginReady && !store.isLogin) {\n            history.replace('/login');\n        }\n    }), [store, history]);\n\n    function logout() {\n        fetch(`${config.apiHost}/api/user/logout`, {\n            method: 'post',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n        .then(data => {\n            store.setIsLogin(false);\n            store.setUserInfo({\n                phone: '',\n                nick: '',\n                id: '',\n            });\n            history.replace('/');\n        });\n    }\n\n    return <Box>\n        <SimpleAppBar />\n        <Observer>\n            {() => \n            <Grid container spacing={2} className={classes.container}>\n                <Grid item xs={12}>\n                    昵称：{store.userInfo.nick}\n                </Grid>\n                <Grid item xs={12}>\n                    电话：{store.userInfo.phone}\n                </Grid>\n                <Grid item xs={12}>\n                    <Button fullWidth variant=\"outlined\" onClick={logout}>退出登录</Button>\n                </Grid>\n            </Grid>}\n        </Observer>\n    </Box>;\n}\n","import React, { useContext, useEffect } from 'react';\nimport {\n  BrowserRouter as Router, Route\n} from \"react-router-dom\";\nimport { Home } from './components/Home';\nimport { BookBox } from './components/Book';\nimport { Login } from './components/Login';\nimport { StoreContext } from './store';\nimport { config } from './config';\nimport { SignUp } from './components/SignUP';\nimport { Center } from './components/Center';\n\nconst App = () => {\n  const store = useContext(StoreContext);\n\n  useEffect(() => {\n    fetch(`${config.apiHost}/api/user/info`, {\n      method: 'get',\n      credentials: 'include',\n    })\n    .then(data => data.json())\n    .then(data => {\n      if (data.errCode === 1000) {\n        store.setIsLogin(false);\n      } else {\n        store.setIsLogin(true);\n        store.setUserInfo(data.info);\n      }\n    });\n  }, [store]);\n\n  return <Router>\n    <Route path=\"/\" exact={true}>\n      <Home />\n    </Route>\n    <Route path=\"/book/:id\">\n      <BookBox />\n    </Route>\n    <Route path=\"/login\">\n      <Login />\n    </Route>\n    <Route path=\"/sign-up\">\n      <SignUp />\n    </Route>\n    <Route path=\"/center\">\n      <Center />\n    </Route>\n  </Router>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { autorun } from 'mobx';\nimport { StoreProvider } from './store';\nimport { CssBaseline } from '@material-ui/core';\nimport { Store } from './store/store';\n\nconst data = new Store();\n\n// autorun(() => {\n//   localStorage.setItem('interactive-book-store', JSON.stringify(data));\n// });\n\nReactDOM.render(\n  <StoreProvider value={data}>\n    <CssBaseline />\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { action, makeObservable, observable } from 'mobx';\n\nexport class Store {\n    public isLogin = false;\n    public isIsLoginReady = false;\n    public userInfo = {\n        phone: '',\n        nick: '',\n        id: '',\n    }\n\n    constructor() {\n        makeObservable(this, {\n            isLogin: observable,\n            isIsLoginReady: observable,\n            userInfo: observable,\n            setIsLogin: action,\n            setUserInfo: action,\n        });\n    }\n\n    setIsLogin(bool: boolean) {\n        this.isLogin = bool;\n        this.isIsLoginReady = true;\n    }\n\n    setUserInfo(info: {\n        phone: string;\n        nick: string;\n        id: string;\n    }) {\n        this.userInfo = info;\n    }\n};\n"],"sourceRoot":""}