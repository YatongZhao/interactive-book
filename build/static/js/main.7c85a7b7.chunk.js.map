{"version":3,"sources":["config.ts","store/index.ts","components/Home.tsx","store/chapter.ts","components/ChapterSelector.tsx","components/Chapter.tsx","components/HideOnScroll.tsx","components/Book.tsx","components/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx","store/store.ts"],"names":["config","apiHost","StoreContext","createContext","StoreProvider","Provider","useStyles","makeStyles","theme","createStyles","title","flexGrow","Home","classes","useState","bookList","setBookList","history","useHistory","store","useContext","useEffect","fetch","method","then","data","json","books","Box","AppBar","position","color","Toolbar","variant","Typography","className","isIsLoginReady","isLogin","Fade","in","userInfo","nick","Button","onClick","push","Skeleton","animation","width","List","map","book","ListItem","button","id","ListItemText","primary","console","log","uuidv4","Chapter","source","author","content","sub","subMap","initialized","this","initialize","makeObservable","observable","addSub","action","addSubMap","chapter","container","marginTop","spacing","ChapterSelector","onSelect","selectId","subheader","ListSubheader","disableSticky","item","ListItemIcon","Radio","checked","AddChapter","open","setOpen","setTitle","setAuthor","setContent","handleClose","disableElevation","size","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","value","onChange","e","target","label","fullWidth","multiline","rowsMax","DialogActions","mode","headers","body","JSON","stringify","parentId","res","useChapterBoxStyles","alignItems","flexDirection","fontWeight","palette","grey","fontSize","textAlign","textIndent","lineHeight","selectorContainer","paddingLeft","marginBottom","ChapterBox","parent","setParentId","selectedSubChapterId","setSelectedSubChapterId","selectedSubChapter","setSelectedSubChapter","showSelector","setShowSelector","handleChange","length","chapterSource","ButtonBase","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","menuButton","marginRight","BookBox","useParams","setBook","IconButton","goBack","edge","Container","margin","maxWidth","submitBtnContainer","submitBtn","buttonProgress","top","left","marginLeft","phoneRegExp","Login","phone","setPhone","isPhoneError","setIsPhoneError","phoneErrorMsg","setPhoneErrorMsg","password","setPassword","isPasswordError","setIsPasswordError","passwordErrorMsg","setPasswordErrorMsg","isPending","setIsPending","elevation","Grid","xs","error","helperText","type","disabled","test","credentials","errCode","setIsLogin","setUserInfo","info","errMsg","CircularProgress","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","bool","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7c85a7b7.chunk.js","sourcesContent":["const isProd = process.env.NODE_ENV === 'production';\n\nexport const config = {\n    apiHost: isProd ? '' : 'http://localhost:3008',\n};\n","import { createContext } from 'react';\nimport { Store } from './store';\n\nexport const StoreContext = createContext<Store>({} as Store);\nexport const StoreProvider = StoreContext.Provider;\n","import { AppBar, Box, Button, createStyles, Fade, List, ListItem, ListItemText, makeStyles, Theme, Toolbar, Typography } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Observer } from 'mobx-react';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { config } from '../config';\nimport { StoreContext } from '../store';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      flexGrow: 1\n    },\n  })\n);\n\nexport const Home = () => {\n    const classes = useStyles();\n    const [bookList, setBookList] = useState([]);\n    const history = useHistory();\n    const store = useContext(StoreContext);\n\n    useEffect(() => {\n\n        fetch(`${config.apiHost}/api/book`, { method: 'get' })\n            .then(data => data.json())\n            .then(data => {\n                setBookList(data.books);\n            });\n    }, []);\n\n    function handleClickBook(id: string) {\n        history.push(`/book/${id}`);\n    }\n\n    return <Box>\n        <AppBar position=\"sticky\" color=\"primary\">\n            <Toolbar variant=\"dense\">\n                <Typography variant=\"h6\" className={classes.title}>\n                    ZBOOK\n                </Typography>\n                <Observer>\n                    {() => <>\n                        {store.isIsLoginReady ? <>\n                            {store.isLogin ?\n                                <Fade in={store.isLogin}>\n                                    <Box>{store.userInfo.nick}</Box>\n                                </Fade> :\n                                <Fade in={!store.isLogin}>\n                                    <Button color=\"inherit\" onClick={() => history.push('/login')}>Login</Button>\n                                </Fade>}\n                        </> : <Skeleton animation=\"wave\" width={60} />}\n                    </>}\n                </Observer>\n            </Toolbar>\n        </AppBar>\n        <List>\n            {bookList.map((book: any) =>\n                <ListItem button key={book.id} onClick={() => handleClickBook(book.id)}>\n                    <ListItemText primary={book.title} />\n                </ListItem>)}\n        </List>\n    </Box>;\n}\n","import { action, makeObservable, observable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nconsole.log(uuidv4());\nexport class Chapter {\n    public title: string = '';\n    public author: string = '';\n    public content: string = '';\n    public sub: {\n        id: string;\n        title: string;\n        author: string;\n    }[] = [];\n    public subMap: { [key: string]: Chapter } = {};\n    public id: string = '';\n\n    public initialized = false;\n\n\n    constructor(source?: any) {\n\n        if (source) {\n            this.initialize(source);\n        }\n\n        makeObservable(this, {\n            initialized: observable,\n            id: observable,\n            title: observable,\n            author: observable,\n            content: observable,\n            sub: observable,\n            subMap: observable,\n            addSub: action,\n            addSubMap: action,\n            initialize: action,\n        });\n    }\n\n    initialize(source: any) {\n        this.id = source.id || uuidv4();\n        this.title = source.title;\n        this.author = source.author;\n        this.content = source.content;\n        this.sub = (source.sub || []);\n\n        this.initialized = true;\n    }\n\n    addSub(source: {\n        title: string;\n        author: string;\n        content: string;\n        id: string;\n    }) {\n        this.sub.push({\n            id: source.id,\n            title: source.title,\n            author: source.author,\n        });\n        this.addSubMap(new Chapter(source));\n    }\n\n    addSubMap(chapter: Chapter) {\n        this.subMap[chapter.id] = chapter;\n    }\n}","import { Box, createStyles, List, ListItem, ListItemIcon, ListItemText, ListSubheader, makeStyles, Radio, Theme } from '@material-ui/core';\nimport React from 'react';\nimport { Chapter } from '../store/chapter';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            marginTop: theme.spacing(2),\n        },\n    })\n);\n\nexport const ChapterSelector = ({ data, onSelect, selectId }: {\n    data: Chapter;\n    selectId: String;\n    onSelect: Function;\n}) => {\n    const classes = useStyles();\n\n    return <Box className={classes.container}>\n        <List\n            subheader={\n                <ListSubheader disableSticky={true}>\n                    觉得本章看的不过瘾？看看其他同样优秀的版本吧：\n                </ListSubheader>\n            }\n        >\n            {data.sub.map(item => <ListItem button key={item.id} onClick={() => onSelect(item.id)}>\n                <ListItemIcon>\n                    <Radio checked={item.id === selectId}/>\n                </ListItemIcon>\n                <ListItemText primary={item.title} />\n            </ListItem>)}\n        </List>\n    </Box>;\n}\n","import { Box, Button, ButtonBase, createStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormControlLabel, FormLabel, makeStyles, Radio, RadioGroup, TextField, Theme, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Chapter } from '../store/chapter';\nimport { Observer } from 'mobx-react';\nimport { ChapterSelector } from './ChapterSelector';\nimport { config } from '../config';\n\nconst AddChapter = ({ data }: {\n    data: Chapter\n}) => {\n    const [open, setOpen] = useState(false);\n    const [title, setTitle] = useState('');\n    const [author, setAuthor] = useState('');\n    const [content, setContent] = useState('');\n\n    const handleClose = () => setOpen(false);\n\n    const handleSubscribe = () => {\n        fetch(`${config.apiHost}/api/chapter`, {\n            method: 'post',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                title, author, content,\n                parentId: data.id,\n            }),\n        })\n        .then(data => data.json())\n        .then(res => {\n            data.addSub({\n                title, author, content,\n                id: res.id\n            });\n            setOpen(false);\n        })\n    }\n\n    return <>\n        <Button variant=\"contained\" color=\"default\" disableElevation size=\"small\" onClick={() => setOpen(true)}>在当前位置添加一个章节</Button>\n        <Dialog onClose={handleClose} open={open}>\n            <DialogTitle>添加一个章节</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    在当前位置，添加一个章节选择\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    value={title}\n                    onChange={e => setTitle(e.target.value)}\n                    label=\"标题\"\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    value={author}\n                    onChange={e => setAuthor(e.target.value)}\n                    label=\"作者\"\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    value={content}\n                    onChange={e => setContent(e.target.value)}\n                    label=\"内容\"\n                    fullWidth\n                    multiline\n                    rowsMax={10}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleSubscribe} color=\"primary\">\n                    确定\n                </Button>\n                <Button onClick={handleClose} color=\"primary\">\n                    取消\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </>;\n}\n\nconst useChapterBoxStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginTop: theme.spacing(8),\n            width: '100%',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n        },\n        author: {\n            fontWeight: 400,\n            color: theme.palette.grey[400],\n            fontSize: theme.spacing(2),\n            textAlign: 'right',\n            width: '100%',\n            marginTop: theme.spacing(1),\n        },\n        content: {\n            marginTop: theme.spacing(6),\n            textIndent: theme.spacing(4),\n            lineHeight: theme.spacing(.22),\n        },\n        selectorContainer: {\n            paddingLeft: theme.spacing(3),\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n        }\n    })\n);\n\nexport const ChapterBox = ({ data, parent, setParentId }: {\n    data: Chapter;\n    parent?: Chapter;\n    setParentId?: Function;\n}) => {\n    const classes = useChapterBoxStyles();\n    const [selectedSubChapterId, setSelectedSubChapterId] = useState('');\n    const [selectedSubChapter, setSelectedSubChapter] = useState<Chapter | null>(null);\n    const [showSelector, setShowSelector] = useState(false);\n\n    const handleSelect = (id: string) => {\n        setParentId && setParentId(id);\n    }\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSelectedSubChapterId(e.target.value);\n        setShowSelector(false);\n    }\n\n    useEffect(() => {\n        if (data.sub.length === 0) return;\n        setSelectedSubChapterId(data.sub[0].id);\n    }, [data]);\n\n    useEffect(() => {\n        if (!selectedSubChapterId) return;\n        if (data.subMap[selectedSubChapterId]) {\n            setSelectedSubChapter(data.subMap[selectedSubChapterId]);\n        } else {\n            fetch(`${config.apiHost}/api/chapter/${selectedSubChapterId}`, {\n                method: 'get'\n            })\n            .then(data => data.json())\n            .then(({ chapter: chapterSource }) => {\n                // console.log('res', res);\n                let chapter = new Chapter(chapterSource);\n                setSelectedSubChapter(chapter);\n                data.addSubMap(chapter);\n            });\n        }\n    }, [selectedSubChapterId, data]);\n\n    return <>\n        <Box className={classes.content}>{data.content}</Box>\n        {parent && <ChapterSelector data={parent} onSelect={handleSelect} selectId={data.id} />}\n        {selectedSubChapter && <>\n            <ButtonBase className={classes.title} onClick={() => setShowSelector(!showSelector)}>\n                <Typography variant=\"h4\">\n                    {selectedSubChapter.title}\n                </Typography>\n                <Box className={classes.author}>author: {selectedSubChapter.author}</Box>\n            </ButtonBase>\n        </>}\n        <Observer>\n            {() => <>\n                {(!selectedSubChapterId || showSelector) && <Box className={classes.selectorContainer}>\n                    {data.sub.length !== 0 && <FormControl component=\"fieldset\" fullWidth>\n                        <FormLabel component=\"legend\">选择一条分支</FormLabel>\n                        <RadioGroup value={selectedSubChapterId} onChange={handleChange}>\n                            {data.sub.map(item => <FormControlLabel\n                                key={item.id} value={item.id} control={<Radio size=\"small\"/>} label={item.title}/>)}\n                        </RadioGroup>\n                    </FormControl>}\n                    <AddChapter data={data} />\n                </Box>}\n            </>}\n        </Observer>\n        <Observer>\n            {() => <>\n                {selectedSubChapter &&\n                    <ChapterBox\n                        key={selectedSubChapter.id}\n                        data={selectedSubChapter}\n                        parent={data}\n                        setParentId={setSelectedSubChapterId} />\n                }\n            </>}\n        </Observer>\n    </>;\n}","import { Slide, useScrollTrigger } from '@material-ui/core';\nimport React from 'react';\n\nexport const HideOnScroll: React.FC = ({ children }) => {\n    const trigger = useScrollTrigger();\n\n    return <Slide appear={false} direction=\"down\" in={!trigger}>\n        {children as any}\n    </Slide>\n}\n","import { AppBar, Box, Container, createStyles, Fade, IconButton, makeStyles, Theme, Toolbar, Typography } from '@material-ui/core';\nimport { Observer } from 'mobx-react';\nimport React, { useEffect, useState } from 'react';\nimport { ChapterBox } from './Chapter';\nimport { config } from '../config';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { HideOnScroll } from './HideOnScroll';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Chapter } from '../store/chapter';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      flexGrow: 1\n    },\n    container: {\n      marginTop: theme.spacing(3),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    }\n  })\n);\nexport const BookBox = () => {\n    const classes = useStyles();\n    const { id } = useParams() as any;\n    const [book, setBook] = useState<Chapter | null>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        fetch(`${config.apiHost}/api/chapter/${id}`, {\n            method: 'get'\n        })\n        .then(data => data.json())\n        .then(data => {\n            setBook(new Chapter(data.chapter));\n        });\n    }, [id]);\n  \n    return <Box>\n        <HideOnScroll>\n            <AppBar position=\"sticky\" color=\"default\">\n                <Toolbar variant=\"dense\">\n                    <IconButton\n                        onClick={() => history.goBack()}\n                        edge=\"start\" className={classes.menuButton} color=\"inherit\">\n                        <ArrowBackIosIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {book ? <Fade in={!!book}><Box>{book.title}</Box></Fade>\n                            : <Skeleton animation=\"wave\" width={100} />}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </HideOnScroll>\n        <Container className={classes.container}>\n            <Observer>\n            {() => <>\n                {book ?\n                book.initialized ?\n                    <ChapterBox data={book} /> :\n                    <Box>error</Box> :\n                <Box>waiting...</Box>}\n            </>}\n            </Observer>\n        </Container>\n    </Box>;\n}\n","import { AppBar, Box, Button, Theme, Grid, IconButton, makeStyles, TextField, Toolbar, createStyles } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { useHistory } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { config } from '../config';\nimport { StoreContext } from '../store';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        margin: `${theme.spacing(4)}px auto`,\n        maxWidth: theme.spacing(40),\n    },\n    submitBtnContainer: {\n        position: 'relative',\n    },\n    submitBtn: {\n        marginTop: theme.spacing(1),\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -10,\n        marginLeft: -12,\n    },\n  })\n);\n\nconst phoneRegExp = /^1[3|4|5|7|8][0-9]{9}$/;\n\nexport const Login = () => {\n    const history = useHistory();\n    const [phone, setPhone] = useState('');\n    const [isPhoneError, setIsPhoneError] = useState(false);\n    const [phoneErrorMsg, setPhoneErrorMsg] = useState('');\n    const [password, setPassword] = useState('');\n    const [isPasswordError, setIsPasswordError] = useState(false);\n    const [passwordErrorMsg, setPasswordErrorMsg] = useState('');\n\n    const [isPending, setIsPending] = useState(false);\n    const store = useContext(StoreContext);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setPhoneErrorMsg('');\n        setIsPhoneError(false);\n    }, [phone]);\n\n    useEffect(() => {\n        setPasswordErrorMsg('');\n        setIsPasswordError(false);\n    }, [password]);\n\n    function onSubmit() {\n        if (isPhoneError) return;\n        if (isPasswordError) return;\n\n        if (!phone) {\n            setPhoneErrorMsg('请输入手机号');\n            setIsPhoneError(true);\n            return;\n        } else if (!phoneRegExp.test(phone)) {\n            setPhoneErrorMsg('请输入正确手机号');\n            setIsPhoneError(true);\n            return;\n        }\n\n        setIsPending(true);\n        fetch(`${config.apiHost}/api/user/sign-in`, {\n            method: 'post',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                phone, password\n            }),\n        })\n        .then(data => data.json())\n        .then(data => {\n            setIsPending(false);\n            if (!data.errCode) {\n                history.goBack();\n                store.setIsLogin(true);\n                store.setUserInfo(data.info);\n                return;\n            }\n            if (data.errCode === 1) {\n                setPhoneErrorMsg(data.errMsg);\n                setIsPhoneError(true);\n            } else if (data.errCode === 2) {\n                setPasswordErrorMsg(data.errMsg);\n                setIsPasswordError(true);\n            }\n        });\n    }\n\n    return <Box>\n        <AppBar position=\"sticky\" color=\"inherit\" elevation={0}>\n            <Toolbar variant=\"dense\">\n                <IconButton\n                    onClick={() => history.goBack()}\n                    edge=\"start\" color=\"inherit\">\n                    <ArrowBackIosIcon />\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n            <Grid container className={classes.container} spacing={4}>\n                <Grid item xs={12}>\n                    <TextField\n                        autoFocus\n                        error={isPhoneError}\n                        helperText={phoneErrorMsg}\n                        value={phone}\n                        onChange={e => setPhone(e.target.value)}\n                        label=\"手机\"\n                        type=\"number\"\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        error={isPasswordError}\n                        helperText={passwordErrorMsg}\n                        value={password}\n                        type=\"password\"\n                        onChange={e => setPassword(e.target.value)}\n                        label=\"密码\"\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12} className={classes.submitBtnContainer}>\n                    <Button\n                        disabled={isPending}\n                        onClick={onSubmit}\n                        className={classes.submitBtn} variant=\"outlined\" color=\"primary\" fullWidth>\n                        LOGIN\n                    </Button>\n                    {isPending && <CircularProgress size={24} className={classes.buttonProgress} />}\n                </Grid>\n            </Grid>\n    </Box>;\n}\n","import React, { useContext, useEffect } from 'react';\nimport {\n  BrowserRouter as Router, Route\n} from \"react-router-dom\";\nimport { Home } from './components/Home';\nimport { BookBox } from './components/Book';\nimport { Login } from './components/Login';\nimport { StoreContext } from './store';\nimport { config } from './config';\n\nconst App = () => {\n  const store = useContext(StoreContext);\n\n  useEffect(() => {\n    fetch(`${config.apiHost}/api/user/info`, {\n      method: 'get',\n      credentials: 'include',\n    })\n    .then(data => data.json())\n    .then(data => {\n      if (data.errCode === 1000) {\n        store.setIsLogin(false);\n      } else {\n        store.setIsLogin(true);\n        store.setUserInfo(data.info);\n      }\n    });\n  }, [store]);\n\n  return <Router>\n    <Route path=\"/\" exact={true}>\n      <Home />\n    </Route>\n    <Route path=\"/book/:id\">\n      <BookBox />\n    </Route>\n    <Route path=\"/login\">\n      <Login />\n    </Route>\n  </Router>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { autorun } from 'mobx';\nimport { StoreProvider } from './store';\nimport { CssBaseline } from '@material-ui/core';\nimport { Store } from './store/store';\n\nconst data = new Store();\n\n// autorun(() => {\n//   localStorage.setItem('interactive-book-store', JSON.stringify(data));\n// });\n\nReactDOM.render(\n  <StoreProvider value={data}>\n    <CssBaseline />\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { action, makeObservable, observable } from 'mobx';\n\nexport class Store {\n    public isLogin = false;\n    public isIsLoginReady = false;\n    public userInfo = {\n        phone: '',\n        nick: '',\n        id: '',\n    }\n\n    constructor() {\n        makeObservable(this, {\n            isLogin: observable,\n            isIsLoginReady: observable,\n            setIsLogin: action,\n            setUserInfo: action,\n        });\n    }\n\n    setIsLogin(bool: boolean) {\n        this.isLogin = bool;\n        this.isIsLoginReady = true;\n    }\n\n    setUserInfo(info: {\n        phone: string;\n        nick: string;\n        id: string;\n    }) {\n        this.userInfo = info;\n    }\n};\n"],"sourceRoot":""}