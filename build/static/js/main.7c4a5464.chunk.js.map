{"version":3,"sources":["config.ts","store/index.ts","components/ContentEditor.tsx","components/AddChapterDialog.tsx","components/Home.tsx","store/chapter.ts","components/ChapterSelector.tsx","components/Chapter.tsx","components/HideOnScroll.tsx","components/Book.tsx","components/Login.tsx","components/SignUP.tsx","components/Center.tsx","App.tsx","reportWebVitals.ts","index.tsx","store/store.ts"],"names":["config","apiHost","phoneRegExp","passwordRegExp","nickRegExp","StoreContext","createContext","StoreProvider","Provider","useStyles","makeStyles","theme","createStyles","section","typography","body1","minHeight","textIndent","spacing","marginTop","marginBottom","container","outline","border","palette","grey","borderRadius","position","content","fontSize","color","left","bottom","borderColor","primary","main","ContentEditor","value","onChange","classes","ref","useRef","useState","values1","setValues1","useEffect","contentEditable","className","suppressContentEditableWarning","onInput","event","Array","prototype","map","call","target","children","item","innerText","length","Box","useAddChapterDialogStyles","appBar","title","marginLeft","flex","padding","progress","top","width","zIndex","contentHeader","Transition","React","forwardRef","props","Slide","direction","AddChapterDialog","open","handleClose","onSubmit","titleLabel","dialogTitle","contentPlaceHolder","name","setName","isNameError","setIsNameError","nameErrorMsg","setNameErrorMsg","contents","setContents","setIsContentError","setContentErrorMsg","pending","setPending","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","Button","autoFocus","then","data","Grid","xs","TextField","error","helperText","e","label","fullWidth","in","LinearProgress","flexGrow","fab","right","loginTips","textAlign","Home","bookList","setBookList","history","useHistory","store","useContext","openAddDialog","setOpenAddDialog","fetch","method","json","books","isIsLoginReady","isLogin","Fade","push","userInfo","nick","Skeleton","animation","List","book","ListItem","button","id","ListItemText","secondary","author","Link","component","RouterLink","to","Fab","mode","credentials","headers","body","JSON","stringify","errCode","console","log","uuidv4","Chapter","source","sub","subMap","initialized","this","initialize","makeObservable","observable","addSub","action","addSubMap","chapter","backgroundColor","addChapterBox","ChapterSelector","onSelect","selectId","header","subheader","ListSubheader","disableSticky","ListItemIcon","Radio","checked","useAddChapterStyles","AddChapter","useChapterBoxStyles","alignItems","flexDirection","fontWeight","lineHeight","selectorContainer","paddingLeft","ChapterBox","parent","setParentId","selectedSubChapterId","setSelectedSubChapterId","selectedSubChapter","setSelectedSubChapter","showSelector","setShowSelector","handleChange","handleCreateChapterSubmit","parentId","res","chapterSource","line","ButtonBase","HideOnScroll","trigger","useScrollTrigger","appear","menuButton","marginRight","BookBox","useParams","setBook","goBack","Container","SimpleAppBar","elevation","margin","maxWidth","submitBtnContainer","submitBtn","buttonProgress","signInBox","display","justifyContent","Login","phone","setPhone","isPhoneError","setIsPhoneError","phoneErrorMsg","setPhoneErrorMsg","password","setPassword","isPasswordError","setIsPasswordError","passwordErrorMsg","setPasswordErrorMsg","isPending","setIsPending","type","disabled","test","setIsLogin","setUserInfo","info","errMsg","CircularProgress","size","SignUp","setNick","isNickError","setIsNickError","nickErrorMsg","setNickErrorMsg","passwordSec","setPasswordSec","isPasswordSecError","setIsPasswordSecError","passwordSecErrorMsg","setPasswordSecErrorMsg","Center","logout","replace","autorun","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","bool","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7c4a5464.chunk.js","sourcesContent":["const isProd = process.env.NODE_ENV === 'production';\n\nexport const config = {\n    apiHost: isProd ? '' : 'http://localhost:3008',\n    phoneRegExp: /^1[3|4|5|7|8][0-9]{9}$/,\n    passwordRegExp: /(?=.*([a-zA-Z].*))(?=.*[0-9].*)[a-zA-Z0-9-*/+.~!@#$%^&*()]{6,20}$/,\n    nickRegExp: /^\\S{4,20}$/,\n};\n","import { createContext } from 'react';\nimport { Store } from './store';\n\nexport const StoreContext = createContext<Store>({} as Store);\nexport const StoreProvider = StoreContext.Provider;\n","import { Box, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    section: {\n        ...theme.typography.body1,\n        minHeight: '1.5rem',\n        textIndent: theme.spacing(4),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    container: {\n        outline: 'none',\n        border: `1px solid ${theme.palette.grey[600]}`,\n        borderRadius: theme.spacing(1),\n        minHeight: theme.spacing(50),\n        position: 'relative',\n        marginTop: theme.spacing(2),\n        '&::before': {\n            content: '\"内容\"',\n            position: 'absolute',\n            fontSize: theme.typography.body1.fontSize,\n            color: theme.palette.grey[600],\n            left: 0,\n            bottom: `calc(100% + ${theme.spacing(0.5)}px)`,\n        },\n        '&:focus': {\n            borderColor: theme.palette.primary.main,\n            '&::before': {\n                color: theme.palette.primary.main,\n            },\n        },\n    }\n  })\n);\n\nexport const ContentEditor = ({ value, onChange}: {\n    value: string[];\n    onChange: (e: string[]) => void;\n}) => {\n    const classes = useStyles();\n    const ref = useRef() as React.MutableRefObject<HTMLDivElement>;\n    const [values1, setValues1] = useState<string[]>([]);\n    useEffect(() => {\n        setValues1(value);\n    }, []);\n\n    function handleInput(event: React.FormEvent<HTMLDivElement>) {\n        onChange(\n            Array.prototype.map.call((event.target as HTMLDivElement).children, (item: HTMLDivElement) => {\n                return item.innerText;\n            }) as string[]\n        );\n    }\n\n    return <div ref={ref} contentEditable={true}\n        className={classes.container}\n        suppressContentEditableWarning={true} onInput={handleInput}>\n        {values1.length === 0 && <Box className={classes.section}></Box>}\n        {values1.map(value => <Box className={classes.section}>{value}</Box>)}\n    </div>;\n}\n","import { AppBar, Box, Button, createStyles, Dialog, Grid, IconButton, LinearProgress, makeStyles, Slide, TextField, Theme, Toolbar, Typography, } from '@material-ui/core';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\nimport React, { useEffect, useState } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ContentEditor } from './ContentEditor';\n\nconst useAddChapterDialogStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n          position: 'relative',\n        },\n        title: {\n          marginLeft: theme.spacing(2),\n          flex: 1,\n        },\n        container: {\n            padding: theme.spacing(2),\n        },\n        progress: {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100vw',\n            zIndex: 10000\n        },\n        contentHeader: {\n            fontSize: theme.typography.body1.fontSize,\n            color: theme.palette.grey[700],\n        }\n    })\n);\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const AddChapterDialog = ({\n    open, handleClose, onSubmit, titleLabel, dialogTitle, contentPlaceHolder\n}: {\n    open: boolean;\n    handleClose: () => void;\n    onSubmit: (arg: {\n        content: string[];\n        title: string;\n    }) => Promise<void>;\n    titleLabel: string;\n    dialogTitle: string;\n    contentPlaceHolder: string;\n}) => {\n    const classes = useAddChapterDialogStyles();\n    const [name, setName] = useState('');\n    const [isNameError, setIsNameError] = useState(false);\n    const [nameErrorMsg, setNameErrorMsg] = useState('');\n    const [contents, setContents] = useState<string[]>([]);\n    const [isContentError, setIsContentError] = useState(false);\n    const [contentErrorMsg, setContentErrorMsg] = useState('');\n    const [pending, setPending] = useState(false);\n\n    useEffect(() => {\n        setIsNameError(false);\n        setNameErrorMsg('');\n    }, [name]);\n\n    useEffect(() => {\n        setIsContentError(false);\n        setContentErrorMsg('');\n    }, [contents]);\n\n    function handleSubmit() {\n        if (!name) {\n            setIsNameError(true);\n            setNameErrorMsg(`${titleLabel}不能为空`);\n            return;\n        }\n        if (contents.length === 0) {\n            setIsContentError(true);\n            setContentErrorMsg('内容不能为空');\n            return;\n        }\n\n        setPending(true);\n        onSubmit({ content: contents, title: name })\n            .then(data => {\n                setPending(false);\n                handleClose();\n            });\n    }\n\n    return <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar} color=\"default\">\n            <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n                {dialogTitle}\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleSubmit}>\n                提交\n            </Button>\n            </Toolbar>\n        </AppBar>\n        <Grid container spacing={4} className={classes.container}>\n            <Grid item xs={12}>\n                <TextField\n                    autoFocus\n                    value={name}\n                    error={isNameError}\n                    helperText={nameErrorMsg}\n                    onChange={e => setName(e.target.value)}\n                    label={titleLabel}\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <ContentEditor value={contents} onChange={setContents} />\n            </Grid>\n        </Grid>\n        <Slide in={pending} direction=\"down\">\n            <LinearProgress className={classes.progress} />\n        </Slide>\n    </Dialog>;\n}\n","import { AppBar, Box, Button, createStyles, Fab, Fade, Link, List, ListItem, ListItemText, makeStyles, Theme, Toolbar, Typography } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Observer } from 'mobx-react';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { config } from '../config';\nimport { StoreContext } from '../store';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport { AddChapterDialog } from './AddChapterDialog';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      flexGrow: 1\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n    loginTips: {\n        textAlign: 'center',\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10),\n        color: theme.palette.grey[400],\n    }\n  })\n);\n\nexport const Home = () => {\n    const classes = useStyles();\n    const [bookList, setBookList] = useState<{\n        title: string;\n        author: string;\n        id: string;\n        content: string;\n        sub: any[];\n    }[]>([]);\n    const history = useHistory();\n    const store = useContext(StoreContext);\n\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n    useEffect(() => {\n\n        fetch(`${config.apiHost}/api/book`, { method: 'get' })\n            .then(data => data.json())\n            .then(data => {\n                setBookList(data.books);\n            });\n    }, []);\n\n    function handleClickBook(id: string) {\n        history.push(`/book/${id}`);\n    }\n\n    function handleCreateBookSubmit({ content, title }: {\n        content: string[]; title: string;\n    }) {\n        return fetch(`${config.apiHost}/api/book`, {\n            method: 'post',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                title,\n                content,\n            }),\n        })\n        .then(data => data.json())\n        .then(data => {\n\n            if (data.errCode === 1000) {\n                history.push('/login');\n                return;\n            }\n\n            handleCreateBook(data.book);\n        });\n    }\n\n    function handleCreateBook(book: {\n        title: string;\n        author: string;\n        id: string;\n        content: string;\n        sub: any[];\n    }) {\n        setBookList([...bookList, book]);\n    }\n\n    return <Box>\n        <AppBar position=\"sticky\" color=\"primary\">\n            <Toolbar variant=\"dense\">\n                <Typography variant=\"h6\" className={classes.title}>\n                    ZBOOK\n                </Typography>\n                <Observer>\n                    {() => <>\n                        {store.isIsLoginReady ? <>\n                            {store.isLogin ?\n                                <Fade in={store.isLogin}>\n                                    <Button color=\"inherit\" onClick={() => history.push('/center')}>{store.userInfo.nick}</Button>\n                                </Fade> :\n                                <Fade in={!store.isLogin}>\n                                    <Button color=\"inherit\" onClick={() => history.push('/login')}>Login</Button>\n                                </Fade>}\n                        </> : <Skeleton animation=\"wave\" width={60} />}\n                    </>}\n                </Observer>\n            </Toolbar>\n        </AppBar>\n        <List>\n            {bookList.map((book: any) =>\n                <ListItem button key={book.id} onClick={() => handleClickBook(book.id)}>\n                    <ListItemText primary={book.title} secondary={book.content[0]}/>\n                    <Box>{book.author}</Box>\n                </ListItem>)}\n        </List>\n        <Observer>\n            {() => <>\n                {!store.isLogin && bookList.length > 0 && <Box className={classes.loginTips}>\n                    <Typography variant=\"caption\">\n                        快去<Link component={RouterLink} to=\"/login\">登录</Link>开始自己的创作吧～\n                    </Typography>\n                </Box>}\n                {store.isLogin && <Fab className={classes.fab} color=\"primary\" onClick={() => setOpenAddDialog(true)}>\n                    <AddIcon />\n                </Fab>}\n            </>}\n        </Observer>\n        <AddChapterDialog\n            open={openAddDialog}\n            dialogTitle=\"创建图书\"\n            contentPlaceHolder=\"本书前言部分内容\"\n            titleLabel=\"书名\"\n            handleClose={() => setOpenAddDialog(false)}\n            onSubmit={handleCreateBookSubmit} />\n    </Box>;\n}\n","import { action, makeObservable, observable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nconsole.log(uuidv4());\nexport class Chapter {\n    public title: string = '';\n    public author: string = '';\n    public content: string[] = [];\n    public sub: {\n        id: string;\n        title: string;\n        author: string;\n    }[] = [];\n    public subMap: { [key: string]: Chapter } = {};\n    public id: string = '';\n\n    public initialized = false;\n\n\n    constructor(source?: any) {\n\n        if (source) {\n            this.initialize(source);\n        }\n\n        makeObservable(this, {\n            initialized: observable,\n            id: observable,\n            title: observable,\n            author: observable,\n            content: observable,\n            sub: observable,\n            subMap: observable,\n            addSub: action,\n            addSubMap: action,\n            initialize: action,\n        });\n    }\n\n    initialize(source: any) {\n        this.id = source.id || uuidv4();\n        this.title = source.title;\n        this.author = source.author;\n        this.content = source.content;\n        this.sub = (source.sub || []);\n\n        this.initialized = true;\n    }\n\n    addSub(source: {\n        title: string;\n        author: string;\n        content: string;\n        id: string;\n    }) {\n        this.sub.push({\n            id: source.id,\n            title: source.title,\n            author: source.author,\n        });\n        this.addSubMap(new Chapter(source));\n    }\n\n    addSubMap(chapter: Chapter) {\n        this.subMap[chapter.id] = chapter;\n    }\n}","import { Box, createStyles, List, ListItem, ListItemIcon, ListItemText, ListSubheader, makeStyles, Radio, Theme } from '@material-ui/core';\nimport { Observer } from 'mobx-react';\nimport React from 'react';\nimport { Chapter } from '../store/chapter';\nimport { AddChapter } from './Chapter';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            marginTop: theme.spacing(2),\n            backgroundColor: theme.palette.grey[300],\n        },\n        addChapterBox: {\n            padding: theme.spacing(4),\n        }\n    })\n);\n\nexport const ChapterSelector = ({ data, onSelect, selectId, onSubmit, header }: {\n    data: Chapter;\n    selectId: String;\n    onSelect: Function;\n    onSubmit: (arg: {\n        content: string[];\n        title: string;\n    }) => Promise<void>;\n    header: string;\n}) => {\n    const classes = useStyles();\n\n    return <Box className={classes.container}>\n        {data.sub.length !== 0 && <Observer>\n            {() => <List\n                subheader={\n                    <ListSubheader disableSticky={true}>\n                        {header}\n                    </ListSubheader>\n                }\n            >\n                {data.sub.map(item => <ListItem button key={item.id} onClick={() => onSelect(item.id)}>\n                    <ListItemIcon>\n                        <Radio checked={item.id === selectId}/>\n                    </ListItemIcon>\n                    <ListItemText primary={item.title} />\n                </ListItem>)}\n            </List>}\n        </Observer>}\n        <Box className={classes.addChapterBox}>\n            <AddChapter onSubmit={onSubmit}/>\n        </Box>\n    </Box>;\n}\n","import { Box, Button, ButtonBase, createStyles, makeStyles, Theme, Typography, Link } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Chapter } from '../store/chapter';\nimport { Observer } from 'mobx-react';\nimport { ChapterSelector } from './ChapterSelector';\nimport { config } from '../config';\nimport { AddChapterDialog } from './AddChapterDialog';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { StoreContext } from '../store';\n\nconst useAddChapterStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loginTips: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        color: theme.palette.grey[400],\n    }\n  })\n);\n\nexport const AddChapter = ({ onSubmit }: {\n    onSubmit: (arg: {\n        content: string[];\n        title: string;\n    }) => Promise<void>;\n}) => {\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n    const store = useContext(StoreContext);\n    const classes = useAddChapterStyles();\n\n    return <Observer>\n        {() => <>\n            {store.isLogin ? <>\n                <Button onClick={() => setOpenAddDialog(true)} fullWidth variant=\"outlined\">创作章节</Button>\n                <AddChapterDialog\n                    titleLabel=\"标题\"\n                    dialogTitle=\"添加章节\"\n                    contentPlaceHolder=\"本章内容...\"\n                    open={openAddDialog}\n                    handleClose={() => setOpenAddDialog(false)}\n                    onSubmit={onSubmit} />\n            </> :\n            <Box className={classes.loginTips}>\n                <Typography variant=\"caption\">\n                    快去<Link to=\"/login\" component={RouterLink}>登录</Link>开始自己对本章的创作吧～\n                </Typography>\n            </Box>}\n        </>}\n    </Observer>;\n}\n\nconst useChapterBoxStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            marginTop: theme.spacing(8),\n            width: '100%',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n        },\n        author: {\n            fontWeight: 400,\n            color: theme.palette.grey[400],\n            fontSize: theme.spacing(2),\n            textAlign: 'right',\n            width: '100%',\n            marginTop: theme.spacing(1),\n        },\n        content: {\n            marginTop: theme.spacing(6),\n            textIndent: theme.spacing(4),\n            lineHeight: theme.spacing(.22),\n        },\n        selectorContainer: {\n            paddingLeft: theme.spacing(3),\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n        }\n    })\n);\n\nexport const ChapterBox = ({ data, parent, setParentId }: {\n    data: Chapter;\n    parent?: Chapter;\n    setParentId?: Function;\n}) => {\n    const classes = useChapterBoxStyles();\n    const [selectedSubChapterId, setSelectedSubChapterId] = useState('');\n    const [selectedSubChapter, setSelectedSubChapter] = useState<Chapter | null>(null);\n    const [showSelector, setShowSelector] = useState(false);\n    const history = useHistory();\n\n    const handleSelect = (id: string) => {\n        setParentId && setParentId(id);\n    }\n\n    const handleChange = (id: string) => {\n        setSelectedSubChapterId(id);\n        setShowSelector(false);\n    }\n\n    function handleCreateChapterSubmit(parent: Chapter) {\n\n        return function ({ content, title }: {\n            content: string[]; title: string;\n        }) {\n            return fetch(`${config.apiHost}/api/chapter`, {\n                method: 'post',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    title, content,\n                    parentId: parent.id,\n                }),\n            })\n            .then(data => data.json())\n            .then(res => {\n                if (res.errCode === 1000) {\n                    history.push('/login');\n                    return;\n                }\n                parent.addSub(res.chapter);\n            });\n        }\n    }\n\n    useEffect(() => {\n        if (data.sub.length === 0) return;\n        setSelectedSubChapterId(data.sub[0].id);\n    }, [data]);\n\n    useEffect(() => {\n        if (!selectedSubChapterId) return;\n        if (data.subMap[selectedSubChapterId]) {\n            setSelectedSubChapter(data.subMap[selectedSubChapterId]);\n        } else {\n            fetch(`${config.apiHost}/api/chapter/${selectedSubChapterId}`, {\n                method: 'get'\n            })\n            .then(data => data.json())\n            .then(({ chapter: chapterSource }) => {\n                let chapter = new Chapter(chapterSource);\n                setSelectedSubChapter(chapter);\n                data.addSubMap(chapter);\n            });\n        }\n    }, [selectedSubChapterId, data]);\n\n    return <>\n        <Box className={classes.content}>\n            {data.content.map((line: string) => <Box>{line}</Box>)}\n        </Box>\n        {parent && <ChapterSelector\n            header=\"觉得本章看的不过瘾？看看其他同样优秀的版本吧：\"\n            onSubmit={handleCreateChapterSubmit(parent)}\n            data={parent} onSelect={handleSelect} selectId={data.id} />}\n        {selectedSubChapter && <>\n            <ButtonBase className={classes.title} onClick={() => setShowSelector(!showSelector)}>\n                <Typography variant=\"h4\">\n                    {selectedSubChapter.title}\n                </Typography>\n                <Box className={classes.author}>author: {selectedSubChapter.author}</Box>\n            </ButtonBase>\n        </>}\n        \n        <Observer>\n            {() => <>\n                {(!selectedSubChapterId || showSelector) && <ChapterSelector\n                    header=\"本章其他分支：\"\n                    onSubmit={handleCreateChapterSubmit(data)}\n                    data={data} onSelect={handleChange} selectId={selectedSubChapterId} />}\n            </>}\n        </Observer>\n        <Observer>\n            {() => <>\n                {selectedSubChapter &&\n                    <ChapterBox\n                        key={selectedSubChapter.id}\n                        data={selectedSubChapter}\n                        parent={data}\n                        setParentId={setSelectedSubChapterId} />\n                }\n            </>}\n        </Observer>\n    </>;\n}","import { Slide, useScrollTrigger } from '@material-ui/core';\nimport React from 'react';\n\nexport const HideOnScroll: React.FC = ({ children }) => {\n    const trigger = useScrollTrigger();\n\n    return <Slide appear={false} direction=\"down\" in={!trigger}>\n        {children as any}\n    </Slide>\n}\n","import { AppBar, Box, Container, createStyles, Fade, IconButton, makeStyles, Theme, Toolbar, Typography } from '@material-ui/core';\nimport { Observer } from 'mobx-react';\nimport React, { useEffect, useState } from 'react';\nimport { ChapterBox } from './Chapter';\nimport { config } from '../config';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { HideOnScroll } from './HideOnScroll';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Chapter } from '../store/chapter';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      flexGrow: 1\n    },\n    container: {\n      marginTop: theme.spacing(3),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    }\n  })\n);\nexport const BookBox = () => {\n    const classes = useStyles();\n    const { id } = useParams() as any;\n    const [book, setBook] = useState<Chapter | null>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        fetch(`${config.apiHost}/api/chapter/${id}`, {\n            method: 'get'\n        })\n        .then(data => data.json())\n        .then(data => {\n            setBook(new Chapter(data.chapter));\n        });\n    }, [id]);\n  \n    return <Box>\n        <HideOnScroll>\n            <AppBar position=\"sticky\" color=\"default\">\n                <Toolbar variant=\"dense\">\n                    <IconButton\n                        onClick={() => history.goBack()}\n                        edge=\"start\" className={classes.menuButton} color=\"inherit\">\n                        <ArrowBackIosIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {book ? <Fade in={!!book}><Box>{book.title}</Box></Fade>\n                            : <Skeleton animation=\"wave\" width={100} />}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </HideOnScroll>\n        <Container className={classes.container}>\n            <Observer>\n            {() => <>\n                {book ?\n                book.initialized ?\n                    <ChapterBox data={book} /> :\n                    <Box>error</Box> :\n                <Box>waiting...</Box>}\n            </>}\n            </Observer>\n        </Container>\n    </Box>;\n}\n","import { AppBar, Box, Button, Theme, Grid, IconButton, makeStyles, TextField, Toolbar, createStyles, Typography, Link } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { config } from '../config';\nimport { StoreContext } from '../store';\n\nexport const SimpleAppBar = () => {\n    const history = useHistory();\n\n    return <AppBar position=\"sticky\" color=\"inherit\" elevation={0}>\n        <Toolbar variant=\"dense\">\n            <IconButton\n                onClick={() => history.goBack()}\n                edge=\"start\" color=\"inherit\">\n                <ArrowBackIosIcon />\n            </IconButton>\n        </Toolbar>\n    </AppBar>;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        margin: `${theme.spacing(4)}px auto`,\n        maxWidth: theme.spacing(40),\n    },\n    submitBtnContainer: {\n        position: 'relative',\n    },\n    submitBtn: {\n        marginTop: theme.spacing(1),\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -10,\n        marginLeft: -12,\n    },\n    signInBox: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n  })\n);\n\nexport const Login = () => {\n    const history = useHistory();\n    const [phone, setPhone] = useState('');\n    const [isPhoneError, setIsPhoneError] = useState(false);\n    const [phoneErrorMsg, setPhoneErrorMsg] = useState('');\n    const [password, setPassword] = useState('');\n    const [isPasswordError, setIsPasswordError] = useState(false);\n    const [passwordErrorMsg, setPasswordErrorMsg] = useState('');\n\n    const [isPending, setIsPending] = useState(false);\n    const store = useContext(StoreContext);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setPhoneErrorMsg('');\n        setIsPhoneError(false);\n    }, [phone]);\n\n    useEffect(() => {\n        setPasswordErrorMsg('');\n        setIsPasswordError(false);\n    }, [password]);\n\n    function onSubmit() {\n        if (isPhoneError) return;\n        if (isPasswordError) return;\n\n        if (!phone) {\n            setPhoneErrorMsg('请输入手机号');\n            setIsPhoneError(true);\n            return;\n        } else if (!config.phoneRegExp.test(phone)) {\n            setPhoneErrorMsg('请输入正确手机号');\n            setIsPhoneError(true);\n            return;\n        }\n\n        setIsPending(true);\n        fetch(`${config.apiHost}/api/user/sign-in`, {\n            method: 'post',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                phone, password\n            }),\n        })\n        .then(data => data.json())\n        .then(data => {\n            setIsPending(false);\n            if (!data.errCode) {\n                history.goBack();\n                store.setIsLogin(true);\n                store.setUserInfo(data.info);\n                return;\n            }\n            if (data.errCode === 1) {\n                setPhoneErrorMsg(data.errMsg);\n                setIsPhoneError(true);\n            } else if (data.errCode === 2) {\n                setPasswordErrorMsg(data.errMsg);\n                setIsPasswordError(true);\n            }\n        });\n    }\n\n    return <Box>\n        <SimpleAppBar />\n        <Grid container className={classes.container} spacing={4}>\n            <Grid item xs={12}>\n                <TextField\n                    autoFocus\n                    error={isPhoneError}\n                    helperText={phoneErrorMsg}\n                    value={phone}\n                    onChange={e => setPhone(e.target.value)}\n                    label=\"手机\"\n                    type=\"number\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    error={isPasswordError}\n                    helperText={passwordErrorMsg}\n                    value={password}\n                    type=\"password\"\n                    onChange={e => setPassword(e.target.value)}\n                    label=\"密码\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12} className={classes.submitBtnContainer}>\n                <Button\n                    disabled={isPending}\n                    onClick={onSubmit}\n                    className={classes.submitBtn} variant=\"outlined\" color=\"primary\" fullWidth>\n                    登录\n                </Button>\n                {isPending && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </Grid>\n            <Grid item xs={12} className={classes.signInBox}>\n                <Typography variant=\"caption\">\n                    还没有账号，立即前往<Link component={RouterLink} to=\"/sign-up\">注册</Link>\n                </Typography>\n            </Grid>\n        </Grid>\n    </Box>;\n}\n","import { Box, Button, CircularProgress, createStyles, Grid, makeStyles, TextField, Theme } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { StoreContext } from '../store';\nimport { SimpleAppBar } from './Login';\nimport { config } from '../config';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        margin: `${theme.spacing(4)}px auto`,\n        maxWidth: theme.spacing(40),\n    },\n    submitBtnContainer: {\n        position: 'relative',\n    },\n    submitBtn: {\n        marginTop: theme.spacing(1),\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -10,\n        marginLeft: -12,\n    },\n  })\n);\n\nexport const SignUp = () => {\n    const history = useHistory();\n\n    const [nick, setNick] = useState('');\n    const [isNickError, setIsNickError] = useState(false);\n    const [nickErrorMsg, setNickErrorMsg] = useState('');\n\n    const [phone, setPhone] = useState('');\n    const [isPhoneError, setIsPhoneError] = useState(false);\n    const [phoneErrorMsg, setPhoneErrorMsg] = useState('');\n\n    const [password, setPassword] = useState('');\n    const [isPasswordError, setIsPasswordError] = useState(false);\n    const [passwordErrorMsg, setPasswordErrorMsg] = useState('');\n\n    const [passwordSec, setPasswordSec] = useState('');\n    const [isPasswordSecError, setIsPasswordSecError] = useState(false);\n    const [passwordSecErrorMsg, setPasswordSecErrorMsg] = useState('');\n\n    const [isPending, setIsPending] = useState(false);\n    const store = useContext(StoreContext);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setNickErrorMsg('');\n        setIsNickError(false);\n    }, [nick]);\n\n    useEffect(() => {\n        setPhoneErrorMsg('');\n        setIsPhoneError(false);\n    }, [phone]);\n\n    useEffect(() => {\n        setPasswordErrorMsg('');\n        setIsPasswordError(false);\n    }, [password]);\n\n    useEffect(() => {\n        setPasswordSecErrorMsg('');\n        setIsPasswordSecError(false);\n    }, [passwordSec]);\n\n    function onSubmit() {\n        if (!phone) {\n            setPhoneErrorMsg('请输入手机号');\n            setIsPhoneError(true);\n            return;\n        } else if (!config.phoneRegExp.test(phone)) {\n            setPhoneErrorMsg('请输入正确手机号');\n            setIsPhoneError(true);\n            return;\n        }\n\n        if (!nick) {\n            setNickErrorMsg('请输入昵称');\n            setIsNickError(true);\n            return;\n        } else if (!config.nickRegExp.test(nick)) {\n            setNickErrorMsg('昵称格式不符合要求(4-20个字符)');\n            setIsNickError(true);\n            return;\n        }\n\n        if (!password) {\n            setPasswordErrorMsg('请设置密码');\n            setIsPasswordError(true);\n            return;\n        } else if (!config.passwordRegExp.test(password)) {\n            setPasswordErrorMsg('密码格式不正确(必须有数字和字母，6-20个字符)');\n            setIsPasswordError(true);\n            return;\n        } else if (!passwordSec) {\n            setPasswordSecErrorMsg('请输入二次确认密码');\n            setIsPasswordSecError(true);\n            return;\n        } else if (password !== passwordSec) {\n            setPasswordSecErrorMsg('两次输入密码不相同');\n            setIsPasswordSecError(true);\n            setIsPasswordError(true);\n            return;\n        }\n\n        setIsPending(true);\n        fetch(`${config.apiHost}/api/user/sign-up`, {\n            method: 'post',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                phone, password, nick\n            }),\n        })\n        .then(data => data.json())\n        .then(data => {\n            setIsPending(false);\n            if (!data.errCode) {\n                store.setIsLogin(true);\n                store.setUserInfo(data.info);\n                history.push('/');\n                return;\n            }\n\n            if (data.errCode === 4) {\n                setPhoneErrorMsg('该手机号已被注册');\n                setIsPhoneError(true);\n            } else if (data.errCode === 5) {\n                setNickErrorMsg('该昵称已存在');\n                setIsNickError(true);\n            }\n        });\n    }\n\n    return <Box>\n        <SimpleAppBar />\n        <Grid container className={classes.container} spacing={4}>\n            <Grid item xs={12}>\n                <TextField\n                    autoFocus\n                    error={isNickError}\n                    helperText={nickErrorMsg}\n                    value={nick}\n                    onChange={e => setNick(e.target.value)}\n                    label=\"昵称\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    error={isPhoneError}\n                    helperText={phoneErrorMsg}\n                    value={phone}\n                    onChange={e => setPhone(e.target.value)}\n                    label=\"手机\"\n                    type=\"number\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    error={isPasswordError}\n                    helperText={passwordErrorMsg}\n                    value={password}\n                    type=\"password\"\n                    onChange={e => setPassword(e.target.value)}\n                    label=\"密码\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    error={isPasswordSecError}\n                    helperText={passwordSecErrorMsg}\n                    value={passwordSec}\n                    type=\"password\"\n                    onChange={e => setPasswordSec(e.target.value)}\n                    label=\"确认密码\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12} className={classes.submitBtnContainer}>\n                <Button\n                    disabled={isPending}\n                    onClick={onSubmit}\n                    className={classes.submitBtn} variant=\"outlined\" color=\"primary\" fullWidth>\n                    注册\n                </Button>\n                {isPending && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </Grid>\n        </Grid>\n    </Box>;\n}\n","import { Box, Button, createStyles, Grid, makeStyles, Theme } from '@material-ui/core';\nimport { autorun } from 'mobx';\nimport { Observer } from 'mobx-react';\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { config } from '../config';\nimport { StoreContext } from '../store';\nimport { SimpleAppBar } from './Login';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            padding: theme.spacing(4),\n        }\n    })\n);\n\nexport const Center = () => {\n    const store = useContext(StoreContext);\n    const history = useHistory();\n    const classes = useStyles();\n\n    useEffect(() => autorun(() => {\n        if (store.isIsLoginReady && !store.isLogin) {\n            history.replace('/login');\n        }\n    }), [store, history]);\n\n    function logout() {\n        fetch(`${config.apiHost}/api/user/logout`, {\n            method: 'post',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n        .then(data => {\n            store.setIsLogin(false);\n            store.setUserInfo({\n                phone: '',\n                nick: '',\n                id: '',\n            });\n            history.replace('/');\n        });\n    }\n\n    return <Box>\n        <SimpleAppBar />\n        <Observer>\n            {() => \n            <Grid container spacing={2} className={classes.container}>\n                <Grid item xs={12}>\n                    昵称：{store.userInfo.nick}\n                </Grid>\n                <Grid item xs={12}>\n                    电话：{store.userInfo.phone}\n                </Grid>\n                <Grid item xs={12}>\n                    <Button fullWidth variant=\"outlined\" onClick={logout}>退出登录</Button>\n                </Grid>\n            </Grid>}\n        </Observer>\n    </Box>;\n}\n","import React, { useContext, useEffect } from 'react';\nimport {\n  BrowserRouter as Router, Route\n} from \"react-router-dom\";\nimport { Home } from './components/Home';\nimport { BookBox } from './components/Book';\nimport { Login } from './components/Login';\nimport { StoreContext } from './store';\nimport { config } from './config';\nimport { SignUp } from './components/SignUP';\nimport { Center } from './components/Center';\n\nconst App = () => {\n  const store = useContext(StoreContext);\n\n  useEffect(() => {\n    fetch(`${config.apiHost}/api/user/info`, {\n      method: 'get',\n      credentials: 'include',\n    })\n    .then(data => data.json())\n    .then(data => {\n      if (data.errCode === 1000) {\n        store.setIsLogin(false);\n      } else {\n        store.setIsLogin(true);\n        store.setUserInfo(data.info);\n      }\n    });\n  }, [store]);\n\n  return <Router>\n    <Route path=\"/\" exact={true}>\n      <Home />\n    </Route>\n    <Route path=\"/book/:id\">\n      <BookBox />\n    </Route>\n    <Route path=\"/login\">\n      <Login />\n    </Route>\n    <Route path=\"/sign-up\">\n      <SignUp />\n    </Route>\n    <Route path=\"/center\">\n      <Center />\n    </Route>\n  </Router>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { autorun } from 'mobx';\nimport { StoreProvider } from './store';\nimport { CssBaseline } from '@material-ui/core';\nimport { Store } from './store/store';\n\nconst data = new Store();\n\n// autorun(() => {\n//   localStorage.setItem('interactive-book-store', JSON.stringify(data));\n// });\n\nReactDOM.render(\n  <StoreProvider value={data}>\n    <CssBaseline />\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { action, makeObservable, observable } from 'mobx';\n\nexport class Store {\n    public isLogin = false;\n    public isIsLoginReady = false;\n    public userInfo = {\n        phone: '',\n        nick: '',\n        id: '',\n    }\n\n    constructor() {\n        makeObservable(this, {\n            isLogin: observable,\n            isIsLoginReady: observable,\n            userInfo: observable,\n            setIsLogin: action,\n            setUserInfo: action,\n        });\n    }\n\n    setIsLogin(bool: boolean) {\n        this.isLogin = bool;\n        this.isIsLoginReady = true;\n    }\n\n    setUserInfo(info: {\n        phone: string;\n        nick: string;\n        id: string;\n    }) {\n        this.userInfo = info;\n    }\n};\n"],"sourceRoot":""}